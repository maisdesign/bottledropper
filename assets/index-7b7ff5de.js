var x=Object.defineProperty;var y=(o,a,e)=>a in o?x(o,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[a]=e;var n=(o,a,e)=>(y(o,typeof a!="symbol"?a+"":a,e),e);import{p}from"./phaser-a167adc1.js";(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&t(r)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class G extends p.Scene{constructor(){super({key:"BootScene"})}preload(){console.log("üîß BootScene: Starting asset loading..."),this.createLoadingUI(),this.load.image("bottle","data:image/svg+xml;base64,"+btoa(`
      <svg width="20" height="40" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="40" fill="#8B4513" stroke="#654321" stroke-width="2"/>
        <rect x="5" y="5" width="10" height="30" fill="#A0522D"/>
      </svg>
    `)),this.load.image("bottle_green","data:image/svg+xml;base64,"+btoa(`
      <svg width="20" height="40" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="40" fill="#228B22" stroke="#006400" stroke-width="2"/>
        <rect x="5" y="5" width="10" height="30" fill="#32CD32"/>
        <text x="10" y="25" text-anchor="middle" fill="white" font-size="10">X</text>
      </svg>
    `)),this.load.image("powerup_star","data:image/svg+xml;base64,"+btoa(`
      <svg width="30" height="30" xmlns="http://www.w3.org/2000/svg">
        <polygon points="15,2 18,10 27,10 20,16 23,25 15,20 7,25 10,16 3,10 12,10"
                 fill="#FFD700" stroke="#FFA500" stroke-width="2"/>
        <circle cx="15" cy="15" r="3" fill="#FFFF00"/>
      </svg>
    `)),this.load.image("bucket","data:image/svg+xml;base64,"+btoa(`
      <svg width="80" height="60" xmlns="http://www.w3.org/2000/svg">
        <path d="M10,20 L70,20 L65,55 L15,55 Z" fill="#888888" stroke="#666666" stroke-width="2"/>
        <rect x="10" y="15" width="60" height="10" fill="#AAAAAA"/>
      </svg>
    `)),this.load.image("background","data:image/svg+xml;base64,"+btoa(`
      <svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="skyGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#87CEEB;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#E0F6FF;stop-opacity:1" />
          </linearGradient>
        </defs>
        <rect width="800" height="600" fill="url(#skyGradient)"/>
      </svg>
    `))}create(){console.log("‚úÖ BootScene: Assets loaded, transitioning to GameScene"),this.cameras.main.fadeOut(300,0,0,0),this.cameras.main.once("camerafadeoutcomplete",()=>{this.scene.start("GameScene")})}createLoadingUI(){const{width:a,height:e}=this.cameras.main,t=this.add.text(a/2,e/2-50,"Loading...",{fontSize:"32px",color:"#ffffff",fontFamily:"Arial"}).setOrigin(.5),s=this.add.graphics();s.fillStyle(0,.3),s.fillRect(a/2-150,e/2,300,20);const i=this.add.graphics();this.load.on("progress",r=>{i.clear(),i.fillStyle(65280),i.fillRect(a/2-150,e/2,300*r,20)}),this.load.on("complete",()=>{t.setText("Ready!"),i.clear(),s.clear()})}}class T extends p.Scene{constructor(){super({key:"GameScene"});n(this,"bucket");n(this,"bottles");n(this,"powerups");n(this,"score",0);n(this,"lives",3);n(this,"timeLeft",60);n(this,"scoreText");n(this,"livesText");n(this,"timerText");n(this,"powerupText");n(this,"spawnTimer");n(this,"powerupTimer");n(this,"gameTimer");n(this,"allGoodTimer");n(this,"gameStarted",!1);n(this,"gameOver",!1);n(this,"allGoodMode",!1);n(this,"allGoodTimeLeft",0);n(this,"gameOverTexts",[])}create(){console.log("üéÆ GameScene: Initializing game...");const{width:e,height:t}=this.cameras.main;this.add.image(e/2,t/2,"background"),this.setupUI(),this.setupGameObjects(),this.setupInput(),this.setupCollisions(),this.cameras.main.fadeIn(300,0,0,0),console.log("‚úÖ GameScene: Ready to play!")}setupUI(){const{width:e,height:t}=this.cameras.main;this.scoreText=this.add.text(16,16,"Score: 0",{fontSize:"24px",color:"#000000",fontFamily:"Arial"}),this.livesText=this.add.text(16,50,"Lives: ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è",{fontSize:"20px",color:"#000000",fontFamily:"Arial"}),this.timerText=this.add.text(e/2,16,"Time: 60s",{fontSize:"24px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),this.powerupText=this.add.text(e-150,16,"",{fontSize:"18px",color:"#FFD700",fontFamily:"Arial"}),this.add.text(e/2,t*.12,"Use arrow keys or drag to move the bucket!",{fontSize:Math.min(18,e*.025)+"px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),this.add.text(e/2,t*.16,"üç∂ Catch brown bottles: +1pt | üü¢ Avoid green bottles: -1 life | ‚≠ê Star: All Good!",{fontSize:Math.min(14,e*.018)+"px",color:"#333333",fontFamily:"Arial"}).setOrigin(.5)}setupGameObjects(){const{width:e,height:t}=this.cameras.main;this.bucket=this.physics.add.image(e/2,t-80,"bucket"),this.bucket.setCollideWorldBounds(!0),this.bucket.setImmovable(!0),this.bottles=this.physics.add.group({defaultKey:"bottle",maxSize:15}),this.powerups=this.physics.add.group({defaultKey:"powerup_star",maxSize:3})}setupInput(){var e;(e=this.input.keyboard)==null||e.createCursorKeys(),this.input.on("pointermove",t=>{if(t.isDown){const{width:s}=this.cameras.main,i=Math.max(40,s*.05);this.bucket.x=Phaser.Math.Clamp(t.x,i,s-i)}}),this.input.on("pointerdown",()=>{this.gameOver||this.startGame()})}setupCollisions(){this.physics.add.overlap(this.bucket,this.bottles,this.catchBottle,void 0,this),this.physics.add.overlap(this.bucket,this.powerups,this.catchPowerup,void 0,this)}startGame(){this.gameStarted||(this.gameOverTexts.forEach(e=>e.destroy()),this.gameOverTexts=[],this.lives=3,this.score=0,this.timeLeft=60,this.gameOver=!1,this.allGoodMode=!1,this.allGoodTimeLeft=0,this.updateLivesDisplay(),this.scoreText.setText(`Score: ${this.score}`),this.timerText.setText(`Time: ${this.timeLeft}s`),this.powerupText.setText(""),this.gameStarted=!0,console.log("üöÄ GAME START DEBUG (RESET):"),console.log(`üíó Starting Lives: ${this.lives}`),console.log(`üéØ Starting Score: ${this.score}`),console.log(`‚è∞ Starting Time: ${this.timeLeft}s`),console.log(`‚≠ê All Good Mode: ${this.allGoodMode}`),this.spawnTimer=this.time.addEvent({delay:1e3,callback:this.spawnBottle,callbackScope:this,loop:!0}),this.scheduleNextPowerup(),this.gameTimer=this.time.addEvent({delay:1e3,callback:this.updateTimer,callbackScope:this,loop:!0}))}spawnBottle(){if(this.gameOver)return;const{width:e}=this.cameras.main,t=60,s=e-60,i=Phaser.Math.Between(t,s),r=Math.random()<.2,c=this.bottles.get(i,-50,"bottle");c&&(c.setActive(!0),c.setVisible(!0),r?(c.setTexture("bottle_green"),console.log(`üü¢ GREEN bottle spawned at x:${i}`)):(c.setTexture("bottle"),console.log(`üç∂ BROWN bottle spawned at x:${i}`)),c.body.velocity.y=200,c.body.velocity.x=Phaser.Math.Between(-50,50),c.body.setCollideWorldBounds(!0),c.body.setBounce(0),c.setData("checkGround",!0),c.setData("isGreen",r))}scheduleNextPowerup(){if(this.gameOver)return;const e=5e3,t=3e4,s=Math.random(),i=Math.pow(s,1.5),r=e+(t-e)*i;console.log(`‚≠ê Next power-up scheduled in ${(r/1e3).toFixed(1)}s`),this.powerupTimer=this.time.addEvent({delay:r,callback:()=>{this.spawnPowerup(),this.scheduleNextPowerup()},callbackScope:this})}spawnPowerup(){if(this.gameOver)return;const{width:e}=this.cameras.main,t=80,s=e-80,i=Phaser.Math.Between(t,s),r=this.powerups.get(i,-30,"powerup_star");if(r){r.setActive(!0),r.setVisible(!0);const c=Phaser.Math.Between(120,180),l=Phaser.Math.Between(-30,30);r.body.velocity.y=c,r.body.velocity.x=l,r.body.setCollideWorldBounds(!0),r.body.setBounce(0),r.setData("checkGround",!0),console.log(`‚≠ê Power-up spawned at x:${i} with velocity(${l}, ${c})`)}}catchBottle(e,t){if(!t.active)return;const s=t.getData("isGreen");console.log("üéØ BOTTLE CATCH DEBUG:"),console.log(`üç∂ Bottle type: ${s?"GREEN (poison)":"BROWN (normal)"}`),console.log(`‚≠ê All Good Mode: ${this.allGoodMode}`),console.log(`üíó Lives before catch: ${this.lives}`),this.bottles.killAndHide(t),t.setActive(!1),t.setVisible(!1),s&&!this.allGoodMode?(console.log("üö® GREEN BOTTLE CAUGHT WITHOUT ALL GOOD - LOSING LIFE!"),this.loseLife()):(this.score+=1,this.scoreText.setText(`Score: ${this.score}`),console.log(`‚úÖ ${s?"Green bottle (All Good active)":"Brown bottle"} caught! +1 point. Score: ${this.score}`))}catchPowerup(e,t){t.active&&(console.log("‚≠ê POWERUP CATCH DEBUG:"),console.log(`üíó Lives before powerup: ${this.lives}`),this.powerups.killAndHide(t),t.setActive(!1),t.setVisible(!1),this.activateAllGoodMode(),console.log(`‚úÖ Power-up caught! All Good mode activated! Lives unchanged: ${this.lives}`))}loseLife(){if(this.gameOver)return;const e=new Error().stack;console.warn("üö® LIFE LOST DEBUG:"),console.warn(`üíî Lives before: ${this.lives}`),console.warn("üîç Called from:",e==null?void 0:e.split(`
`).slice(1,4)),console.warn(`‚≠ê All Good Mode: ${this.allGoodMode}`),this.lives-=1,this.updateLivesDisplay(),console.warn(`üíî Lives after: ${this.lives}`),this.lives<=0&&(console.warn("‚ò†Ô∏è GAME OVER - No lives remaining"),this.endGame())}updateLivesDisplay(){const e="‚ù§Ô∏è".repeat(this.lives);this.livesText.setText(`Lives: ${e}`)}updateTimer(){this.gameOver||(this.timeLeft-=1,this.timerText.setText(`Time: ${this.timeLeft}s`),this.timeLeft<=0&&this.endGame())}activateAllGoodMode(){this.allGoodMode=!0,this.allGoodTimeLeft=10,this.powerupText.setText(`‚≠ê ALL GOOD: ${this.allGoodTimeLeft}s`),this.allGoodTimer&&this.allGoodTimer.destroy(),this.allGoodTimer=this.time.addEvent({delay:1e3,callback:this.updateAllGoodMode,callbackScope:this,loop:!0})}updateAllGoodMode(){this.allGoodMode&&(this.allGoodTimeLeft-=1,this.powerupText.setText(`‚≠ê ALL GOOD: ${this.allGoodTimeLeft}s`),this.allGoodTimeLeft<=0&&this.deactivateAllGoodMode())}deactivateAllGoodMode(){this.allGoodMode=!1,this.allGoodTimeLeft=0,this.powerupText.setText(""),this.allGoodTimer&&this.allGoodTimer.destroy(),console.log("‚≠ê All Good mode deactivated")}endGame(){this.gameOver=!0,this.gameStarted=!1,this.spawnTimer&&this.spawnTimer.destroy(),this.powerupTimer&&this.powerupTimer.destroy(),this.gameTimer&&this.gameTimer.destroy(),this.allGoodTimer&&this.allGoodTimer.destroy(),this.deactivateAllGoodMode();const{width:e,height:t}=this.cameras.main,s=this.add.text(e/2,t/2,"GAME OVER!",{fontSize:Math.min(48,e*.06)+"px",color:"#ff0000",fontFamily:"Arial"}).setOrigin(.5),i=this.add.text(e/2,t/2+50,`Final Score: ${this.score}`,{fontSize:Math.min(24,e*.03)+"px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),r=this.add.text(e/2,t/2+100,'Click "New Game" to restart',{fontSize:Math.min(18,e*.025)+"px",color:"#666666",fontFamily:"Arial"}).setOrigin(.5);this.gameOverTexts.push(s,i,r),console.log(`üéÆ Game Over! Final Score: ${this.score}`)}update(){var i,r,c;if(this.gameOver)return;const{width:e,height:t}=this.cameras.main,s=(i=this.input.keyboard)==null?void 0:i.createCursorKeys();if(s){const l=Math.max(40,e*.05),u=Math.max(5,e*.006);(r=s.left)!=null&&r.isDown?this.bucket.x=Math.max(l,this.bucket.x-u):(c=s.right)!=null&&c.isDown&&(this.bucket.x=Math.min(e-l,this.bucket.x+u))}this.bottles.children.entries.forEach(l=>{if(l.active&&l.getData("checkGround")&&l.y>=t-20){const u=l.getData("isGreen");console.log(`üåç GROUND HIT: ${u?"GREEN":"BROWN"} bottle hit ground - NO LIFE LOSS`),this.bottles.killAndHide(l),l.setActive(!1),l.setVisible(!1)}}),this.powerups.children.entries.forEach(l=>{l.active&&l.getData("checkGround")&&l.y>=t-20&&(this.powerups.killAndHide(l),l.setActive(!1),l.setVisible(!1))}),!this.gameStarted&&!this.gameOver&&this.time.now>3e3&&this.startGame()}shutdown(){this.spawnTimer&&this.spawnTimer.destroy(),this.powerupTimer&&this.powerupTimer.destroy(),this.gameTimer&&this.gameTimer.destroy(),this.allGoodTimer&&this.allGoodTimer.destroy()}}const b={type:Phaser.AUTO,width:800,height:600,parent:"game-container",backgroundColor:"#87CEEB",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,min:{width:300,height:400},max:{width:1200,height:900}},physics:{default:"arcade",arcade:{gravity:{x:0,y:300},debug:!1}},scene:[G,T]};let h=null;function w(){return h&&h.destroy(!0),h=new p.Game(b),h}function v(){return h}function L(){h&&(h.destroy(!0),h=null)}document.addEventListener("DOMContentLoaded",()=>{document.getElementById("game-container")&&w()});let g=!1;window.startNewGame=function(){console.log("üéÆ Starting new game..."),L(),w()};window.togglePause=function(){const o=v();o&&(g=!g,g?(o.scene.pause("GameScene"),document.querySelector(".btn:nth-child(2)").textContent="‚ñ∂Ô∏è Resume",console.log("‚è∏Ô∏è Game paused")):(o.scene.resume("GameScene"),document.querySelector(".btn:nth-child(2)").textContent="‚è∏Ô∏è Pause",console.log("‚ñ∂Ô∏è Game resumed")))};window.showInstructions=function(){alert(`üéÆ How to Play:

üéØ Objective: Catch falling bottles with your bucket!

üïπÔ∏è Controls:
‚Ä¢ Use ‚Üê ‚Üí arrow keys to move
‚Ä¢ Or click and drag with mouse/touch
‚Ä¢ Click anywhere to start the game

üèÜ Scoring:
‚Ä¢ Each bottle caught = 10 points
‚Ä¢ Try to catch as many as possible!

Good luck!`)};let f=null,d=!1,m=!1;function S(){if(f=v(),!f)return;const o=f.scene.getScene("GameScene");if(o){if(d&&o.bucket){const{width:a}=o.cameras.main,e=Math.max(40,a*.05),t=Math.max(5,a*.006);o.bucket.x=Math.max(e,o.bucket.x-t)}if(m&&o.bucket){const{width:a}=o.cameras.main,e=Math.max(40,a*.05),t=Math.max(5,a*.006);o.bucket.x=Math.min(a-e,o.bucket.x+t)}}}document.addEventListener("DOMContentLoaded",function(){console.log("üöÄ Etimu√® Bottle Dropper v2.0.0 loaded!"),w();const o=document.getElementById("touch-left"),a=document.getElementById("touch-right");o&&a&&(o.addEventListener("touchstart",e=>{e.preventDefault(),d=!0}),o.addEventListener("touchend",e=>{e.preventDefault(),d=!1}),o.addEventListener("mousedown",e=>{e.preventDefault(),d=!0}),o.addEventListener("mouseup",e=>{e.preventDefault(),d=!1}),a.addEventListener("touchstart",e=>{e.preventDefault(),m=!0}),a.addEventListener("touchend",e=>{e.preventDefault(),m=!1}),a.addEventListener("mousedown",e=>{e.preventDefault(),m=!0}),a.addEventListener("mouseup",e=>{e.preventDefault(),m=!1}),setInterval(S,16))});
//# sourceMappingURL=index-7b7ff5de.js.map
