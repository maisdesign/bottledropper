{"version":3,"file":"AuthModal-ab91850c.js","sources":["../../src/ui/AuthModal.ts"],"sourcesContent":["import { authManager } from '../systems/AuthManager'\nimport { languageManager } from '../i18n/LanguageManager'\n\nexport class AuthModal {\n  private element: HTMLElement\n  private onAuthCallback?: (success: boolean) => void\n  private currentStep: 'welcome' | 'email' | 'verify' | 'profile' = 'welcome'\n  private currentEmail: string = ''\n\n  constructor() {\n    this.element = this.createElement()\n    this.setupEventListeners()\n    this.setupLanguageListener()\n    document.body.appendChild(this.element)\n  }\n\n  private createElement(): HTMLElement {\n    const modal = document.createElement('div')\n    modal.id = 'auth-modal'\n    modal.className = 'auth-modal hidden'\n    modal.innerHTML = this.getModalHTML()\n    return modal\n  }\n\n  private getModalHTML(): string {\n    const t = languageManager.getTranslation()\n    return `\n      <div class=\"auth-modal-backdrop\">\n        <div class=\"auth-modal-content\">\n          <!-- Welcome Step -->\n          <div class=\"auth-step\" id=\"auth-step-welcome\">\n            <h2>${t.authWelcome}</h2>\n            <p>${t.authSignInToPlay}</p>\n\n            <div class=\"auth-buttons\">\n              <button id=\"auth-google\" class=\"auth-button auth-button-google\">\n                <span>üîç</span> ${t.authContinueGoogle}\n              </button>\n\n              <button id=\"auth-email\" class=\"auth-button auth-button-email\">\n                <span>üìß</span> ${t.authContinueEmail}\n              </button>\n            </div>\n\n            <button id=\"auth-close\" class=\"auth-close-btn\">√ó</button>\n          </div>\n\n          <!-- Email Step -->\n          <div class=\"auth-step hidden\" id=\"auth-step-email\">\n            <h2>${t.authEmailTitle}</h2>\n            <p>${t.authEmailSubtitle}</p>\n\n            <div class=\"auth-form\">\n              <input\n                type=\"email\"\n                id=\"auth-email-input\"\n                placeholder=\"${t.authEmailPlaceholder}\"\n                class=\"auth-input\"\n              >\n              <button id=\"auth-send-otp\" class=\"auth-button auth-button-primary\">\n                ${t.authSendCode}\n              </button>\n              <button id=\"auth-back-welcome\" class=\"auth-button auth-button-secondary\">\n                ${t.authBack}\n              </button>\n            </div>\n          </div>\n\n          <!-- Verify Step -->\n          <div class=\"auth-step hidden\" id=\"auth-step-verify\">\n            <h2>${t.authVerifyTitle}</h2>\n            <p>${t.authVerifySubtitle}</p>\n\n            <div class=\"auth-form\">\n              <input\n                type=\"text\"\n                id=\"auth-otp-input\"\n                placeholder=\"${t.authOtpPlaceholder}\"\n                class=\"auth-input auth-input-otp\"\n                maxlength=\"6\"\n              >\n              <button id=\"auth-verify-otp\" class=\"auth-button auth-button-primary\">\n                ${t.authVerify}\n              </button>\n              <button id=\"auth-back-email\" class=\"auth-button auth-button-secondary\">\n                ${t.authBack}\n              </button>\n            </div>\n          </div>\n\n          <!-- Profile Setup Step -->\n          <div class=\"auth-step hidden\" id=\"auth-step-profile\">\n            <h2>${t.authProfileTitle}</h2>\n            <p>${t.authProfileSubtitle}</p>\n\n            <div class=\"auth-form\">\n              <input\n                type=\"text\"\n                id=\"auth-nickname-input\"\n                placeholder=\"${t.authNicknamePlaceholder}\"\n                class=\"auth-input\"\n                maxlength=\"20\"\n              >\n\n              <div class=\"consent-checkbox\">\n                <label>\n                  <input type=\"checkbox\" id=\"marketing-consent\" class=\"auth-checkbox\">\n                  ${t.authMarketingConsent}\n                </label>\n              </div>\n\n              <button id=\"auth-complete\" class=\"auth-button auth-button-primary\">\n                ${t.authStartPlaying}\n              </button>\n            </div>\n          </div>\n\n          <!-- Loading overlay -->\n          <div class=\"auth-loading hidden\" id=\"auth-loading\">\n            <div class=\"spinner\"></div>\n            <p>${t.authProcessing}</p>\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  private setupEventListeners(): void {\n    // Close modal\n    this.element.querySelector('#auth-close')?.addEventListener('click', () => {\n      this.hide()\n    })\n\n    // Google sign in\n    this.element.querySelector('#auth-google')?.addEventListener('click', async () => {\n      await this.handleGoogleSignIn()\n    })\n\n    // Email flow\n    this.element.querySelector('#auth-email')?.addEventListener('click', () => {\n      this.showStep('email')\n    })\n\n    this.element.querySelector('#auth-send-otp')?.addEventListener('click', async () => {\n      await this.handleSendOTP()\n    })\n\n    this.element.querySelector('#auth-verify-otp')?.addEventListener('click', async () => {\n      await this.handleVerifyOTP()\n    })\n\n    // Navigation\n    this.element.querySelector('#auth-back-welcome')?.addEventListener('click', () => {\n      this.showStep('welcome')\n    })\n\n    this.element.querySelector('#auth-back-email')?.addEventListener('click', () => {\n      this.showStep('email')\n    })\n\n    // Profile completion\n    this.element.querySelector('#auth-complete')?.addEventListener('click', async () => {\n      await this.handleCompleteProfile()\n    })\n\n    // Click outside to close\n    this.element.querySelector('.auth-modal-backdrop')?.addEventListener('click', (e) => {\n      if (e.target === e.currentTarget) {\n        this.hide()\n      }\n    })\n\n    // Enter key handling\n    this.element.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.hide()\n      }\n      if (e.key === 'Enter') {\n        this.handleEnterKey()\n      }\n    })\n  }\n\n  private setupLanguageListener(): void {\n    languageManager.onLanguageChange(() => {\n      // Recreate modal content with new translations\n      this.element.innerHTML = this.getModalHTML()\n      // Re-setup event listeners since we recreated the HTML\n      this.setupEventListeners()\n      // Restore current step\n      this.showStep(this.currentStep)\n    })\n  }\n\n  private async handleGoogleSignIn(): Promise<void> {\n    this.showLoading(true)\n\n    try {\n      const result = await authManager.signInWithGoogle()\n\n      if (result.success) {\n        // Google OAuth will redirect, so we just wait\n        console.log('Google sign in initiated')\n      } else {\n        const t = languageManager.getTranslation()\n        this.showError(result.error || t.authGoogleFailed)\n        this.showLoading(false)\n      }\n    } catch (error) {\n      console.error('Google sign in error:', error)\n      const t = languageManager.getTranslation()\n      this.showError(t.authUnexpectedError)\n      this.showLoading(false)\n    }\n  }\n\n  private async handleSendOTP(): Promise<void> {\n    const emailInput = this.element.querySelector('#auth-email-input') as HTMLInputElement\n    const email = emailInput?.value.trim()\n\n    if (!email || !email.includes('@')) {\n      const t = languageManager.getTranslation()\n      this.showError(t.authInvalidEmail)\n      return\n    }\n\n    this.currentEmail = email\n    this.showLoading(true)\n\n    try {\n      const result = await authManager.signInWithOTP(email)\n\n      if (result.success) {\n        this.showStep('verify')\n        const t = languageManager.getTranslation()\n        this.showSuccess(t.authCodeSent)\n      } else {\n        const t = languageManager.getTranslation()\n        this.showError(result.error || t.authSendFailed)\n      }\n    } catch (error) {\n      console.error('Send OTP error:', error)\n      const t = languageManager.getTranslation()\n      this.showError(t.authUnexpectedError)\n    } finally {\n      this.showLoading(false)\n    }\n  }\n\n  private async handleVerifyOTP(): Promise<void> {\n    const otpInput = this.element.querySelector('#auth-otp-input') as HTMLInputElement\n    const token = otpInput?.value.trim()\n\n    if (!token || token.length !== 6) {\n      const t = languageManager.getTranslation()\n      this.showError(t.authCodeLength)\n      return\n    }\n\n    this.showLoading(true)\n\n    try {\n      const result = await authManager.verifyOTP(this.currentEmail, token)\n\n      if (result.success) {\n        // Wait for auth state to update\n        await new Promise(resolve => setTimeout(resolve, 1000))\n\n        const state = authManager.getState()\n        if (state.isAuthenticated) {\n          if (state.profile?.nickname) {\n            // User already has profile, complete\n            this.completeAuth(true)\n          } else {\n            // Show profile setup\n            this.showStep('profile')\n          }\n        } else {\n          const t = languageManager.getTranslation()\n          this.showError(t.authFailed)\n        }\n      } else {\n        const t = languageManager.getTranslation()\n        this.showError(result.error || t.authInvalidCode)\n      }\n    } catch (error) {\n      console.error('Verify OTP error:', error)\n      const t = languageManager.getTranslation()\n      this.showError(t.authVerifyFailed)\n    } finally {\n      this.showLoading(false)\n    }\n  }\n\n  private async handleCompleteProfile(): Promise<void> {\n    const nicknameInput = this.element.querySelector('#auth-nickname-input') as HTMLInputElement\n    const consentInput = this.element.querySelector('#marketing-consent') as HTMLInputElement\n\n    const nickname = nicknameInput?.value.trim() || null\n    const hasConsent = consentInput?.checked || false\n\n    this.showLoading(true)\n\n    try {\n      await authManager.updateProfile({\n        nickname,\n        consent_marketing: hasConsent,\n        consent_timestamp: hasConsent ? new Date().toISOString() : null\n      })\n\n      this.completeAuth(true)\n    } catch (error) {\n      console.error('Profile update error:', error)\n      const t = languageManager.getTranslation()\n      this.showError(t.authProfileFailed)\n      this.showLoading(false)\n    }\n  }\n\n  private showStep(step: typeof this.currentStep): void {\n    // Hide all steps\n    this.element.querySelectorAll('.auth-step').forEach(el => {\n      el.classList.add('hidden')\n    })\n\n    // Show target step\n    const stepElement = this.element.querySelector(`#auth-step-${step}`)\n    if (stepElement) {\n      stepElement.classList.remove('hidden')\n      this.currentStep = step\n\n      // Focus first input in new step\n      const firstInput = stepElement.querySelector('input') as HTMLInputElement\n      if (firstInput) {\n        setTimeout(() => firstInput.focus(), 100)\n      }\n    }\n  }\n\n  private showLoading(show: boolean): void {\n    const loading = this.element.querySelector('#auth-loading')\n    if (loading) {\n      loading.classList.toggle('hidden', !show)\n    }\n  }\n\n  private showError(message: string): void {\n    // Remove existing alerts\n    this.element.querySelectorAll('.auth-alert').forEach(el => el.remove())\n\n    const alert = document.createElement('div')\n    alert.className = 'auth-alert auth-alert-error'\n    alert.textContent = message\n\n    const currentStep = this.element.querySelector(`.auth-step:not(.hidden)`)\n    if (currentStep) {\n      currentStep.insertBefore(alert, currentStep.firstChild)\n    }\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => alert.remove(), 5000)\n  }\n\n  private showSuccess(message: string): void {\n    // Remove existing alerts\n    this.element.querySelectorAll('.auth-alert').forEach(el => el.remove())\n\n    const alert = document.createElement('div')\n    alert.className = 'auth-alert auth-alert-success'\n    alert.textContent = message\n\n    const currentStep = this.element.querySelector(`.auth-step:not(.hidden)`)\n    if (currentStep) {\n      currentStep.insertBefore(alert, currentStep.firstChild)\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => alert.remove(), 3000)\n  }\n\n  private handleEnterKey(): void {\n    switch (this.currentStep) {\n      case 'email':\n        this.element.querySelector('#auth-send-otp')?.dispatchEvent(new Event('click'))\n        break\n      case 'verify':\n        this.element.querySelector('#auth-verify-otp')?.dispatchEvent(new Event('click'))\n        break\n      case 'profile':\n        this.element.querySelector('#auth-complete')?.dispatchEvent(new Event('click'))\n        break\n    }\n  }\n\n  private completeAuth(success: boolean): void {\n    if (this.onAuthCallback) {\n      this.onAuthCallback(success)\n    }\n    this.hide()\n  }\n\n  // Public API\n  public show(): void {\n    this.element.classList.remove('hidden')\n    this.showStep('welcome')\n\n    // Focus management\n    setTimeout(() => {\n      const firstButton = this.element.querySelector('.auth-button') as HTMLElement\n      firstButton?.focus()\n    }, 100)\n  }\n\n  public hide(): void {\n    this.element.classList.add('hidden')\n    // Don't call completeAuth here to avoid infinite loop\n  }\n\n  public onAuth(callback: (success: boolean) => void): void {\n    this.onAuthCallback = callback\n  }\n\n  public destroy(): void {\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element)\n    }\n  }\n}"],"names":["AuthModal","__publicField","modal","languageManager","_a","_b","_c","_d","_e","_f","_g","_h","_i","e","result","authManager","t","error","emailInput","email","otpInput","token","resolve","state","nicknameInput","consentInput","nickname","hasConsent","step","el","stepElement","firstInput","show","loading","message","alert","currentStep","success","firstButton","callback"],"mappings":"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"}