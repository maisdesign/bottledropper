var k=Object.defineProperty;var O=(r,t,e)=>t in r?k(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>(O(r,typeof t!="symbol"?t+"":t,e),e);import{p as E}from"./phaser-f8c8a439.js";import{c as I,_ as M}from"./supabase-2481e69c.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))i(a);new MutationObserver(a=>{for(const o of a)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function e(a){const o={};return a.integrity&&(o.integrity=a.integrity),a.referrerPolicy&&(o.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?o.credentials="include":a.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(a){if(a.ep)return;a.ep=!0;const o=e(a);fetch(a.href,o)}})();class $ extends E.Scene{constructor(){super({key:"BootScene"})}preload(){console.log("🔧 BootScene: Starting asset loading..."),this.createLoadingUI(),this.load.image("bottle","data:image/svg+xml;base64,"+btoa(`
      <svg width="20" height="40" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="40" fill="#8B4513" stroke="#654321" stroke-width="2"/>
        <rect x="5" y="5" width="10" height="30" fill="#A0522D"/>
      </svg>
    `)),this.load.image("bottle_green","data:image/svg+xml;base64,"+btoa(`
      <svg width="20" height="40" xmlns="http://www.w3.org/2000/svg">
        <rect width="20" height="40" fill="#228B22" stroke="#006400" stroke-width="2"/>
        <rect x="5" y="5" width="10" height="30" fill="#32CD32"/>
        <text x="10" y="25" text-anchor="middle" fill="white" font-size="10">X</text>
      </svg>
    `)),this.load.image("powerup_star","data:image/svg+xml;base64,"+btoa(`
      <svg width="30" height="30" xmlns="http://www.w3.org/2000/svg">
        <polygon points="15,2 18,10 27,10 20,16 23,25 15,20 7,25 10,16 3,10 12,10"
                 fill="#FFD700" stroke="#FFA500" stroke-width="2"/>
        <circle cx="15" cy="15" r="3" fill="#FFFF00"/>
      </svg>
    `)),this.load.image("charlie","/characters/charlie.png"),this.load.image("scrocca","/characters/scrocca.png"),this.load.image("leprecauno","/characters/leprecauno.png"),this.load.image("bucket","data:image/svg+xml;base64,"+btoa(`
      <svg width="80" height="60" xmlns="http://www.w3.org/2000/svg">
        <path d="M10,20 L70,20 L65,55 L15,55 Z" fill="#888888" stroke="#666666" stroke-width="2"/>
        <rect x="10" y="15" width="60" height="10" fill="#AAAAAA"/>
      </svg>
    `)),this.load.image("background","data:image/svg+xml;base64,"+btoa(`
      <svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="skyGradient" x1="0%" y1="0%" x2="0%" y2="100%">
            <stop offset="0%" style="stop-color:#87CEEB;stop-opacity:1" />
            <stop offset="100%" style="stop-color:#E0F6FF;stop-opacity:1" />
          </linearGradient>
        </defs>
        <rect width="800" height="600" fill="url(#skyGradient)"/>
      </svg>
    `))}create(){console.log("✅ BootScene: Assets loaded, transitioning to GameScene"),this.cameras.main.fadeOut(300,0,0,0),this.cameras.main.once("camerafadeoutcomplete",()=>{this.scene.start("GameScene")})}createLoadingUI(){const{width:t,height:e}=this.cameras.main,i=this.add.text(t/2,e/2-50,"Loading...",{fontSize:"32px",color:"#ffffff",fontFamily:"Arial"}).setOrigin(.5),a=this.add.graphics();a.fillStyle(0,.3),a.fillRect(t/2-150,e/2,300,20);const o=this.add.graphics();this.load.on("progress",s=>{o.clear(),o.fillStyle(65280),o.fillRect(t/2-150,e/2,300*s,20)}),this.load.on("complete",()=>{i.setText("Ready!"),o.clear(),a.clear()})}}const y={en:{title:"Etimuè Bottle Dropper",subtitle:"Catch the falling bottles!",version:"v2.0.0 - Clean Architecture",newGame:"New Game",pause:"Pause",resume:"Resume",instructions:"Instructions",testAuth:"Test Auth",footerMadeBy:"Made with ❤️ by Etimuè",footerControls:"Use arrow keys or mouse to control the bucket",instructionsTitle:"🎮 How to Play:",instructionsObjective:"🎯 Objective: Catch falling bottles with your bucket!",instructionsControls:"🕹️ Controls:",instructionsRules:"🍶 Game Rules:",instructionsTips:"🏆 Tips:",instructionsGoodLuck:"Good luck! 🎮",instructionsArrowKeys:"• Use ← → arrow keys to move",instructionsMouseDrag:"• Or click and drag with mouse/touch",instructionsMobileTouch:"• On mobile: Use touch controls at bottom",instructionsBrownBottles:"• Brown bottles: +1 point each",instructionsGreenBottles:"• Green bottles: Lose 1 life (unless All Good mode)",instructionsStarPowerups:"• ⭐ Star power-ups: Activate All Good mode",instructionsLives:"• 💗 You have 3 lives",instructionsTimer:"• ⏰ 60 seconds to play",instructionsCatchStars:"• Catch star power-ups to avoid green bottle damage",instructionsAllGoodMode:"• All Good mode makes green bottles worth +1 point",instructionsHighScore:"• Try to get the highest score possible!",score:"Score",lives:"Lives",time:"Time",allGood:"ALL GOOD",gameInstructions:"Use arrow keys or drag to move the bucket!",gameRules:"🍶 Catch brown bottles: +1pt | 🟢 Avoid green bottles: -1 life | ⭐ Star: All Good!",gameOver:"GAME OVER!",finalScore:"Final Score",restartMessage:'Click "New Game" to restart',authWelcome:"🎮 Welcome to Etimuè Bottle Dropper!",authSignInToPlay:"Sign in to play and compete for prizes",authContinueGoogle:"Continue with Google",authContinueEmail:"Continue with Email",authEmailTitle:"📧 Sign in with Email",authEmailSubtitle:"We'll send you a verification code",authSendCode:"Send Code",authBack:"← Back",authVerifyTitle:"🔐 Enter Verification Code",authVerifySubtitle:"Check your email for the 6-digit code",authVerify:"Verify",authProfileTitle:"👤 Setup Your Profile",authProfileSubtitle:"Choose a nickname for the leaderboard",authNicknamePlaceholder:"Your nickname",authMarketingConsent:"I want to receive updates and compete for prizes",authStartPlaying:"Start Playing!",authProcessing:"Processing...",authEmailPlaceholder:"your@email.com",authOtpPlaceholder:"000000",authInvalidEmail:"Please enter a valid email address",authCodeSent:"Verification code sent to your email!",authInvalidCode:"Invalid verification code",authCodeLength:"Please enter the 6-digit verification code",authFailed:"Authentication failed, please try again",authUnexpectedError:"Unexpected error during authentication",authGoogleFailed:"Google sign in failed",authSendFailed:"Failed to send verification code",authVerifyFailed:"Unexpected error during verification",authProfileFailed:"Failed to update profile",testAuthTitle:"🔐 Auth System Demo",testAuthFeatures:`📱 AuthModal Features:
✅ Google OAuth integration
✅ Email OTP verification
✅ Multi-step flow (Welcome → Email → Verify → Profile)
✅ Marketing consent handling
✅ Nickname setup
✅ Mobile responsive design
✅ Glassmorphism UI`,testAuthIntegration:`🎮 Integration:
✅ Game requires auth before play
✅ Profile management
✅ Score submission ready`,testAuthReady:"The Auth system is 98% complete and ready for production testing!",testAuthTryGame:'Click "New Game" to see auth requirement in action.',footerControlsCharacter:"Use arrow keys or mouse to control {character}",characterCharlie:"Charlie",characterScrocca:"Scrocca",characterLeprecauno:"Leprechaun"},it:{title:"Etimuè Bottle Dropper",subtitle:"Prendi le bottiglie che cadono!",version:"v2.0.0 - Architettura Pulita",newGame:"Nuova Partita",pause:"Pausa",resume:"Riprendi",instructions:"Istruzioni",testAuth:"Test Auth",footerMadeBy:"Fatto con ❤️ da Etimuè",footerControls:"Usa le frecce o il mouse per controllare il secchio",instructionsTitle:"🎮 Come Giocare:",instructionsObjective:"🎯 Obiettivo: Prendi le bottiglie che cadono con il tuo secchio!",instructionsControls:"🕹️ Controlli:",instructionsRules:"🍶 Regole del Gioco:",instructionsTips:"🏆 Suggerimenti:",instructionsGoodLuck:"Buona fortuna! 🎮",instructionsArrowKeys:"• Usa le frecce ← → per muoverti",instructionsMouseDrag:"• Oppure clicca e trascina con mouse/touch",instructionsMobileTouch:"• Su mobile: Usa i controlli touch in basso",instructionsBrownBottles:"• Bottiglie marroni: +1 punto ciascuna",instructionsGreenBottles:"• Bottiglie verdi: Perdi 1 vita (tranne in modalità All Good)",instructionsStarPowerups:"• ⭐ Power-up stella: Attiva modalità All Good",instructionsLives:"• 💗 Hai 3 vite",instructionsTimer:"• ⏰ 60 secondi per giocare",instructionsCatchStars:"• Prendi i power-up stella per evitare danni dalle bottiglie verdi",instructionsAllGoodMode:"• La modalità All Good rende le bottiglie verdi del valore di +1 punto",instructionsHighScore:"• Cerca di ottenere il punteggio più alto possibile!",score:"Punteggio",lives:"Vite",time:"Tempo",allGood:"ALL GOOD",gameInstructions:"Usa le frecce o trascina per muovere il secchio!",gameRules:"🍶 Prendi bottiglie marroni: +1pt | 🟢 Evita bottiglie verdi: -1 vita | ⭐ Stella: All Good!",gameOver:"GAME OVER!",finalScore:"Punteggio Finale",restartMessage:'Clicca "Nuova Partita" per ricominciare',authWelcome:"🎮 Benvenuto su Etimuè Bottle Dropper!",authSignInToPlay:"Accedi per giocare e competere per i premi",authContinueGoogle:"Continua con Google",authContinueEmail:"Continua con Email",authEmailTitle:"📧 Accedi con Email",authEmailSubtitle:"Ti invieremo un codice di verifica",authSendCode:"Invia Codice",authBack:"← Indietro",authVerifyTitle:"🔐 Inserisci Codice di Verifica",authVerifySubtitle:"Controlla la tua email per il codice a 6 cifre",authVerify:"Verifica",authProfileTitle:"👤 Configura il Tuo Profilo",authProfileSubtitle:"Scegli un nickname per la classifica",authNicknamePlaceholder:"Il tuo nickname",authMarketingConsent:"Voglio ricevere aggiornamenti e competere per i premi",authStartPlaying:"Inizia a Giocare!",authProcessing:"Elaborazione...",authEmailPlaceholder:"tua@email.com",authOtpPlaceholder:"000000",authInvalidEmail:"Inserisci un indirizzo email valido",authCodeSent:"Codice di verifica inviato alla tua email!",authInvalidCode:"Codice di verifica non valido",authCodeLength:"Inserisci il codice di verifica a 6 cifre",authFailed:"Autenticazione fallita, riprova",authUnexpectedError:"Errore imprevisto durante l'autenticazione",authGoogleFailed:"Accesso con Google fallito",authSendFailed:"Invio del codice di verifica fallito",authVerifyFailed:"Errore imprevisto durante la verifica",authProfileFailed:"Aggiornamento del profilo fallito",testAuthTitle:"🔐 Demo Sistema Auth",testAuthFeatures:`📱 Funzionalità AuthModal:
✅ Integrazione Google OAuth
✅ Verifica Email OTP
✅ Flusso multi-step (Benvenuto → Email → Verifica → Profilo)
✅ Gestione consenso marketing
✅ Configurazione nickname
✅ Design responsive mobile
✅ UI Glassmorphism`,testAuthIntegration:`🎮 Integrazione:
✅ Il gioco richiede auth prima di giocare
✅ Gestione profilo
✅ Invio punteggio pronto`,testAuthReady:"Il sistema Auth è completo al 98% e pronto per i test di produzione!",testAuthTryGame:`Clicca "Nuova Partita" per vedere l'autenticazione in azione.`,footerControlsCharacter:"Usa le frecce o il mouse per controllare {character}",characterCharlie:"Charlie",characterScrocca:"Scrocca",characterLeprecauno:"Leprecauno"}},m=class m{constructor(){n(this,"currentLanguage","en");n(this,"callbacks",new Set);const t=localStorage.getItem("etimue-language"),e=navigator.language.toLowerCase();t&&t in y?this.currentLanguage=t:e.startsWith("it")?this.currentLanguage="it":this.currentLanguage="en",console.log(`🌍 Language initialized: ${this.currentLanguage}`)}static getInstance(){return m.instance||(m.instance=new m),m.instance}getCurrentLanguage(){return this.currentLanguage}setLanguage(t){t!==this.currentLanguage&&t in y&&(this.currentLanguage=t,localStorage.setItem("etimue-language",t),console.log(`🌍 Language changed to: ${t}`),this.callbacks.forEach(e=>e(t)))}getTranslation(){return y[this.currentLanguage]}translate(t){return y[this.currentLanguage][t]}onLanguageChange(t){this.callbacks.add(t)}offLanguageChange(t){this.callbacks.delete(t)}toggleLanguage(){const t=this.currentLanguage==="en"?"it":"en";this.setLanguage(t)}getAvailableLanguages(){return Object.keys(y)}getLanguageDisplayName(t){switch(t){case"en":return"English";case"it":return"Italiano";default:return t}}};n(m,"instance");let b=m;const c=b.getInstance(),f=class f{constructor(){n(this,"currentCharacter","charlie");n(this,"callbacks",new Set);let t=localStorage.getItem("etimue-character");t==="irlandese"&&(t="leprecauno",localStorage.setItem("etimue-character",t),console.log("🔄 Migrated character from 'irlandese' to 'leprecauno'")),t&&this.isValidCharacter(t)&&(this.currentCharacter=t),console.log(`🐱 Character initialized: ${this.currentCharacter}`)}static getInstance(){return f.instance||(f.instance=new f),f.instance}isValidCharacter(t){return["charlie","scrocca","leprecauno"].includes(t)}getCurrentCharacter(){return this.currentCharacter}setCharacter(t){t!==this.currentCharacter&&this.isValidCharacter(t)&&(this.currentCharacter=t,localStorage.setItem("etimue-character",t),console.log(`🐱 Character changed to: ${t}`),this.callbacks.forEach(e=>e(t)))}getCharacterInfo(t){const e=t||this.currentCharacter,i=c.getTranslation();switch(e){case"charlie":return{id:"charlie",name:i.characterCharlie,sprite:"charlie",description:"Punk cat with attitude"};case"scrocca":return{id:"scrocca",name:i.characterScrocca,sprite:"scrocca",description:"Party cat who loves fun"};case"leprecauno":return{id:"leprecauno",name:i.characterLeprecauno,sprite:"leprecauno",description:"Lucky Irish leprechaun cat"};default:return this.getCharacterInfo("charlie")}}getCurrentCharacterName(){return this.getCharacterInfo().name}getAllCharacters(){return["charlie","scrocca","leprecauno"].map(t=>this.getCharacterInfo(t))}onCharacterChange(t){this.callbacks.add(t)}offCharacterChange(t){this.callbacks.delete(t)}cycleCharacter(){const t=["charlie","scrocca","leprecauno"],i=(t.indexOf(this.currentCharacter)+1)%t.length;this.setCharacter(t[i])}};n(f,"instance");let L=f;const d=L.getInstance();class B extends E.Scene{constructor(){super({key:"GameScene"});n(this,"character");n(this,"bottles");n(this,"powerups");n(this,"score",0);n(this,"lives",3);n(this,"timeLeft",60);n(this,"scoreText");n(this,"livesText");n(this,"timerText");n(this,"powerupText");n(this,"instructionsText");n(this,"rulesText");n(this,"languageChangeCallback");n(this,"spawnTimer");n(this,"powerupTimer");n(this,"gameTimer");n(this,"allGoodTimer");n(this,"gameStarted",!1);n(this,"gameOver",!1);n(this,"allGoodMode",!1);n(this,"allGoodTimeLeft",0);n(this,"gameOverTexts",[])}create(){console.log("🎮 GameScene: Initializing game...");const{width:e,height:i}=this.cameras.main;this.add.image(e/2,i/2,"background"),this.setupUI(),this.setupGameObjects(),this.setupInput(),this.setupCollisions(),this.cameras.main.fadeIn(300,0,0,0),console.log("✅ GameScene: Ready to play!")}setupUI(){const{width:e,height:i}=this.cameras.main,a=c.getTranslation();this.scoreText=this.add.text(16,16,`${a.score}: 0`,{fontSize:"24px",color:"#000000",fontFamily:"Arial"}),this.livesText=this.add.text(16,50,`${a.lives}: ❤️❤️❤️`,{fontSize:"20px",color:"#000000",fontFamily:"Arial"}),this.timerText=this.add.text(e/2,16,`${a.time}: 60s`,{fontSize:"24px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),this.powerupText=this.add.text(e-16,16,"",{fontSize:"18px",color:"#FFD700",fontFamily:"Arial"}).setOrigin(1,0),this.instructionsText=this.add.text(e/2,i*.12,a.gameInstructions,{fontSize:Math.min(18,e*.025)+"px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),this.rulesText=this.add.text(e/2,i*.16,a.gameRules,{fontSize:Math.min(14,e*.018)+"px",color:"#333333",fontFamily:"Arial"}).setOrigin(.5),this.languageChangeCallback=()=>{this.updateUITexts()},c.onLanguageChange(this.languageChangeCallback)}updateUITexts(){const e=c.getTranslation();this.scoreText.setText(`${e.score}: ${this.score}`);const i="❤️".repeat(this.lives);this.livesText.setText(`${e.lives}: ${i}`),this.timerText.setText(`${e.time}: ${this.timeLeft}s`),this.instructionsText.setText(e.gameInstructions),this.rulesText.setText(e.gameRules),this.allGoodMode&&this.powerupText.setText(`⭐ ${e.allGood}: ${this.allGoodTimeLeft}s`)}setupGameObjects(){const{width:e,height:i}=this.cameras.main,a=d.getCurrentCharacter();this.character=this.physics.add.image(e/2,i-80,a),this.character.setCollideWorldBounds(!0),this.character.setImmovable(!0),this.character.setScale(.6),this.character.setOrigin(.5,1),d.onCharacterChange(o=>{this.character&&(this.character.setTexture(o),this.character.setOrigin(.5,1),console.log(`🐱 Character sprite updated to: ${o}`))}),this.bottles=this.physics.add.group({defaultKey:"bottle",maxSize:15}),this.powerups=this.physics.add.group({defaultKey:"powerup_star",maxSize:3})}setupInput(){var e;(e=this.input.keyboard)==null||e.createCursorKeys(),this.input.on("pointermove",i=>{if(i.isDown){const{width:a}=this.cameras.main,o=Math.max(40,a*.05);this.character.x=Phaser.Math.Clamp(i.x,o,a-o)}}),this.input.on("pointerdown",()=>{this.gameOver||this.startGame()})}setupCollisions(){this.physics.add.overlap(this.character,this.bottles,this.catchBottle,void 0,this),this.physics.add.overlap(this.character,this.powerups,this.catchPowerup,void 0,this)}startGame(){if(this.gameStarted)return;this.gameOverTexts.forEach(i=>i.destroy()),this.gameOverTexts=[],this.lives=3,this.score=0,this.timeLeft=60,this.gameOver=!1,this.allGoodMode=!1,this.allGoodTimeLeft=0,this.updateLivesDisplay();const e=c.getTranslation();this.scoreText.setText(`${e.score}: ${this.score}`),this.timerText.setText(`${e.time}: ${this.timeLeft}s`),this.powerupText.setText(""),this.gameStarted=!0,console.log("🚀 GAME START DEBUG (RESET):"),console.log(`💗 Starting Lives: ${this.lives}`),console.log(`🎯 Starting Score: ${this.score}`),console.log(`⏰ Starting Time: ${this.timeLeft}s`),console.log(`⭐ All Good Mode: ${this.allGoodMode}`),this.spawnTimer=this.time.addEvent({delay:1e3,callback:this.spawnBottle,callbackScope:this,loop:!0}),this.scheduleNextPowerup(),this.gameTimer=this.time.addEvent({delay:1e3,callback:this.updateTimer,callbackScope:this,loop:!0})}spawnBottle(){if(this.gameOver)return;const{width:e}=this.cameras.main,i=60,a=e-60,o=Phaser.Math.Between(i,a),s=Math.random()<.2,h=this.bottles.get(o,-50,"bottle");h&&(h.setActive(!0),h.setVisible(!0),s?(h.setTexture("bottle_green"),console.log(`🟢 GREEN bottle spawned at x:${o}`)):(h.setTexture("bottle"),console.log(`🍶 BROWN bottle spawned at x:${o}`)),h.body.velocity.y=200,h.body.velocity.x=Phaser.Math.Between(-50,50),h.body.setCollideWorldBounds(!0),h.body.setBounce(0),h.setData("checkGround",!0),h.setData("isGreen",s))}scheduleNextPowerup(){if(this.gameOver)return;const e=5e3,i=3e4,a=Math.random(),o=Math.pow(a,1.5),s=e+(i-e)*o;console.log(`⭐ Next power-up scheduled in ${(s/1e3).toFixed(1)}s`),this.powerupTimer=this.time.addEvent({delay:s,callback:()=>{this.spawnPowerup(),this.scheduleNextPowerup()},callbackScope:this})}spawnPowerup(){if(this.gameOver)return;const{width:e}=this.cameras.main,i=80,a=e-80,o=Phaser.Math.Between(i,a),s=this.powerups.get(o,-30,"powerup_star");if(s){s.setActive(!0),s.setVisible(!0);const h=Phaser.Math.Between(120,180),l=Phaser.Math.Between(-30,30);s.body.velocity.y=h,s.body.velocity.x=l,s.body.setCollideWorldBounds(!0),s.body.setBounce(0),s.setData("checkGround",!0),console.log(`⭐ Power-up spawned at x:${o} with velocity(${l}, ${h})`)}}catchBottle(e,i){if(!i.active)return;const a=i.getData("isGreen");if(console.log("🎯 BOTTLE CATCH DEBUG:"),console.log(`🍶 Bottle type: ${a?"GREEN (poison)":"BROWN (normal)"}`),console.log(`⭐ All Good Mode: ${this.allGoodMode}`),console.log(`💗 Lives before catch: ${this.lives}`),this.bottles.killAndHide(i),i.setActive(!1),i.setVisible(!1),a&&!this.allGoodMode)console.log("🚨 GREEN BOTTLE CAUGHT WITHOUT ALL GOOD - LOSING LIFE!"),this.loseLife();else{this.score+=1;const o=c.getTranslation();this.scoreText.setText(`${o.score}: ${this.score}`),console.log(`✅ ${a?"Green bottle (All Good active)":"Brown bottle"} caught! +1 point. Score: ${this.score}`)}}catchPowerup(e,i){i.active&&(console.log("⭐ POWERUP CATCH DEBUG:"),console.log(`💗 Lives before powerup: ${this.lives}`),this.powerups.killAndHide(i),i.setActive(!1),i.setVisible(!1),this.activateAllGoodMode(),console.log(`✅ Power-up caught! All Good mode activated! Lives unchanged: ${this.lives}`))}loseLife(){if(this.gameOver)return;const e=new Error().stack;console.warn("🚨 LIFE LOST DEBUG:"),console.warn(`💔 Lives before: ${this.lives}`),console.warn("🔍 Called from:",e==null?void 0:e.split(`
`).slice(1,4)),console.warn(`⭐ All Good Mode: ${this.allGoodMode}`),this.lives-=1,this.updateLivesDisplay(),console.warn(`💔 Lives after: ${this.lives}`),this.lives<=0&&(console.warn("☠️ GAME OVER - No lives remaining"),this.endGame())}updateLivesDisplay(){const e="❤️".repeat(this.lives),i=c.getTranslation();this.livesText.setText(`${i.lives}: ${e}`)}updateTimer(){if(this.gameOver)return;this.timeLeft-=1;const e=c.getTranslation();this.timerText.setText(`${e.time}: ${this.timeLeft}s`),this.timeLeft<=0&&this.endGame()}activateAllGoodMode(){this.allGoodMode=!0,this.allGoodTimeLeft=10;const e=c.getTranslation();this.powerupText.setText(`⭐ ${e.allGood}: ${this.allGoodTimeLeft}s`),this.allGoodTimer&&this.allGoodTimer.destroy(),this.allGoodTimer=this.time.addEvent({delay:1e3,callback:this.updateAllGoodMode,callbackScope:this,loop:!0})}updateAllGoodMode(){if(!this.allGoodMode)return;this.allGoodTimeLeft-=1;const e=c.getTranslation();this.powerupText.setText(`⭐ ${e.allGood}: ${this.allGoodTimeLeft}s`),this.allGoodTimeLeft<=0&&this.deactivateAllGoodMode()}deactivateAllGoodMode(){this.allGoodMode=!1,this.allGoodTimeLeft=0,this.powerupText.setText(""),this.allGoodTimer&&this.allGoodTimer.destroy(),console.log("⭐ All Good mode deactivated")}endGame(){this.gameOver=!0,this.gameStarted=!1,this.spawnTimer&&this.spawnTimer.destroy(),this.powerupTimer&&this.powerupTimer.destroy(),this.gameTimer&&this.gameTimer.destroy(),this.allGoodTimer&&this.allGoodTimer.destroy(),this.deactivateAllGoodMode();const{width:e,height:i}=this.cameras.main,a=c.getTranslation(),o=this.add.text(e/2,i/2,a.gameOver,{fontSize:Math.min(48,e*.06)+"px",color:"#ff0000",fontFamily:"Arial"}).setOrigin(.5),s=this.add.text(e/2,i/2+50,`${a.finalScore}: ${this.score}`,{fontSize:Math.min(24,e*.03)+"px",color:"#000000",fontFamily:"Arial"}).setOrigin(.5),h=this.add.text(e/2,i/2+100,a.restartMessage,{fontSize:Math.min(18,e*.025)+"px",color:"#666666",fontFamily:"Arial"}).setOrigin(.5);this.gameOverTexts.push(o,s,h),console.log(`🎮 Game Over! Final Score: ${this.score}`)}update(){var o,s,h;if(this.gameOver)return;const{width:e,height:i}=this.cameras.main,a=(o=this.input.keyboard)==null?void 0:o.createCursorKeys();if(a){const l=Math.max(40,e*.05),x=Math.max(5,e*.006);(s=a.left)!=null&&s.isDown?this.character.x=Math.max(l,this.character.x-x):(h=a.right)!=null&&h.isDown&&(this.character.x=Math.min(e-l,this.character.x+x))}this.bottles.children.entries.forEach(l=>{if(l.active&&l.getData("checkGround")&&l.y>=i-20){const x=l.getData("isGreen");console.log(`🌍 GROUND HIT: ${x?"GREEN":"BROWN"} bottle hit ground - NO LIFE LOSS`),this.bottles.killAndHide(l),l.setActive(!1),l.setVisible(!1)}}),this.powerups.children.entries.forEach(l=>{l.active&&l.getData("checkGround")&&l.y>=i-20&&(this.powerups.killAndHide(l),l.setActive(!1),l.setVisible(!1))}),!this.gameStarted&&!this.gameOver&&this.time.now>3e3&&this.startGame()}shutdown(){this.spawnTimer&&this.spawnTimer.destroy(),this.powerupTimer&&this.powerupTimer.destroy(),this.gameTimer&&this.gameTimer.destroy(),this.allGoodTimer&&this.allGoodTimer.destroy(),this.languageChangeCallback&&c.offLanguageChange(this.languageChangeCallback)}}const D={type:Phaser.AUTO,width:800,height:600,parent:"game-container",backgroundColor:"#87CEEB",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,min:{width:300,height:400},max:{width:1200,height:900}},physics:{default:"arcade",arcade:{gravity:{x:0,y:300},debug:!1}},scene:[$,B]};let g=null;function F(){return g&&g.destroy(!0),g=new E.Game(D),g}function P(){return g}function N(){g&&(g.destroy(!0),g=null)}const T={}.VITE_SUPABASE_URL,C={}.VITE_SUPABASE_ANON_KEY;console.log("🔍 Environment check:",{url:T?"SET":"MISSING",key:C?"SET":"MISSING",env:{BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1}});if(!T||!C)throw console.error("❌ Missing env vars:",{supabaseUrl:T,supabaseAnonKey:C}),new Error(`Missing Supabase environment variables: URL=${!!T}, KEY=${!!C}`);const u=I(T,C,{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0}}),G={async getProfile(r){try{const{data:t,error:e}=await u.from("profiles").select("*").eq("id",r).maybeSingle();return e?(console.error("Error fetching profile:",e),null):t}catch(t){return console.error("Profile fetch exception:",t),null}},async createProfile(r){try{const{data:t,error:e}=await u.from("profiles").upsert(r,{onConflict:"id",ignoreDuplicates:!1}).select().single();return e?(console.error("Error creating profile:",e),null):t}catch(t){return console.error("Profile creation exception:",t),null}},async updateProfile(r,t){try{const{data:e,error:i}=await u.from("profiles").update(t).eq("id",r).select().single();return i?(console.error("Error updating profile:",i),null):e}catch(e){return console.error("Profile update exception:",e),null}},async checkNicknameAvailability(r,t){try{if(!r||r.trim().length===0)return!0;const e=u.from("profiles").select("id").eq("nickname",r.trim());t&&e.neq("id",t);const{data:i,error:a}=await e;return a?(console.error("Error checking nickname availability:",a),!1):i.length===0}catch(e){return console.error("Nickname availability check exception:",e),!1}}};class R{constructor(){n(this,"state",{user:null,profile:null,session:null,isLoading:!0,isAuthenticated:!1,hasMarketingConsent:!1});n(this,"listeners",[]);n(this,"isProcessingAuth",!1);this.initializeAuth(),this.setupAuthListeners()}async initializeAuth(){try{console.log("🔄 Initializing auth...");const t=u.auth.getSession(),e=new Promise((o,s)=>setTimeout(()=>s(new Error("Session timeout")),5e3)),{data:{session:i},error:a}=await Promise.race([t,e]);a&&console.error("Error getting session:",a),i?(console.log("✅ Session found, processing auth..."),await this.handleAuthChange(i)):console.log("ℹ️ No active session")}catch(t){console.error("Auth initialization error:",t)}finally{this.state.isLoading=!1,this.notifyListeners(),console.log("✅ Auth initialization complete")}}setupAuthListeners(){u.auth.onAuthStateChange(async(t,e)=>{switch(console.log("🔄 Auth state change:",t),t){case"SIGNED_IN":e&&await this.handleAuthChange(e);break;case"SIGNED_OUT":this.resetAuthState();break;case"TOKEN_REFRESHED":e&&(this.state.session=e,this.state.user=e.user);break}this.notifyListeners()})}async handleAuthChange(t){var e,i;if(this.isProcessingAuth){console.log("⏳ Already processing auth, skipping...");return}this.isProcessingAuth=!0;try{console.log("👤 Processing auth for user:",t.user.email),this.state.session=t,this.state.user=t.user,this.state.isAuthenticated=!0;let a=await G.getProfile(t.user.id);a||(console.log("📝 Creating new profile..."),a=await G.createProfile({email:t.user.email||"",nickname:((e=t.user.user_metadata)==null?void 0:e.name)||((i=t.user.user_metadata)==null?void 0:i.full_name)||null,consent_marketing:!1,consent_timestamp:null})),this.state.profile=a,this.state.hasMarketingConsent=(a==null?void 0:a.consent_marketing)||!1,console.log("✅ Auth processing complete:",{email:t.user.email,hasProfile:!!a,hasConsent:this.state.hasMarketingConsent})}catch(a){console.error("❌ Error processing auth:",a)}finally{this.state.isLoading=!1,this.isProcessingAuth=!1}}resetAuthState(){this.state={user:null,profile:null,session:null,isLoading:!1,isAuthenticated:!1,hasMarketingConsent:!1}}notifyListeners(){this.listeners.forEach(t=>{try{t(this.state)}catch(e){console.error("Error in auth listener:",e)}})}subscribe(t){return this.listeners.push(t),t(this.state),()=>{const e=this.listeners.indexOf(t);e>-1&&this.listeners.splice(e,1)}}getState(){return{...this.state}}isReady(){return!this.state.isLoading}canPlayGame(){return this.state.isAuthenticated}canCompeteForPrizes(){return this.state.isAuthenticated&&this.state.hasMarketingConsent}async signInWithGoogle(){try{const{error:t}=await u.auth.signInWithOAuth({provider:"google"});return t?(console.error("Google sign in error:",t),{success:!1,error:t.message}):{success:!0}}catch(t){return console.error("Google sign in exception:",t),{success:!1,error:"Unexpected error during sign in"}}}async signInWithOTP(t){try{const{error:e}=await u.auth.signInWithOtp({email:t});return e?(console.error("OTP sign in error:",e),{success:!1,error:e.message}):{success:!0}}catch(e){return console.error("OTP sign in exception:",e),{success:!1,error:"Unexpected error during sign in"}}}async verifyOTP(t,e){try{const{error:i}=await u.auth.verifyOtp({email:t,token:e,type:"email"});return i?(console.error("OTP verification error:",i),{success:!1,error:i.message}):{success:!0}}catch(i){return console.error("OTP verification exception:",i),{success:!1,error:"Unexpected error during verification"}}}async signOut(){try{const{error:t}=await u.auth.signOut();if(t)throw t}catch(t){throw console.error("Sign out error:",t),t}}async updateProfile(t){if(!this.state.user)throw new Error("No authenticated user");try{const e=await G.updateProfile(this.state.user.id,t);return e&&(this.state.profile=e,"consent_marketing"in t&&(this.state.hasMarketingConsent=e.consent_marketing),this.notifyListeners()),e}catch(e){throw console.error("Profile update error:",e),e}}async refreshProfile(){if(this.state.user)try{const t=await G.getProfile(this.state.user.id);t&&(this.state.profile=t,this.state.hasMarketingConsent=t.consent_marketing,this.notifyListeners())}catch(t){console.error("Profile refresh error:",t)}}destroy(){this.listeners=[]}}const p=new R,U=async()=>{if(console.log("🎮 Checking auth for game access..."),p.canPlayGame())return console.log("✅ User can play!"),!0;if(p.isReady()||(console.log("⏳ Waiting for auth to initialize..."),await new Promise(t=>{const e=p.subscribe(i=>{i.isLoading||(e(),t())})})),!p.canPlayGame())return console.log("🔐 Showing auth modal..."),new Promise(t=>{M(()=>import("./AuthModal-b2e9ce02.js"),["assets/AuthModal-b2e9ce02.js","assets/phaser-f8c8a439.js","assets/supabase-2481e69c.js"]).then(({AuthModal:e})=>{const i=new e;i.onAuth(a=>{i.destroy(),t(a&&p.canPlayGame())}),i.show()}).catch(e=>{console.error("Failed to load AuthModal:",e),t(!1)})});const r=p.canPlayGame();return console.log("🎯 Final auth check result:",r),r};let A=!1;function z(){function r(){const e=c.getTranslation();document.querySelectorAll("[data-i18n]").forEach(o=>{const s=o.getAttribute("data-i18n");s&&s in e&&(s==="footerControls"?t():o.textContent=e[s])});const i=document.getElementById("language-btn");if(i){const o=c.getCurrentLanguage();i.textContent=`🌍 ${o.toUpperCase()}`}const a=document.getElementById("character-btn");if(a){const o=d.getCurrentCharacterName();a.textContent=`🐱 ${o}`}document.documentElement.lang=c.getCurrentLanguage()}function t(){const e=document.querySelector('[data-i18n="footerControls"]');if(e){const i=c.getTranslation(),a=d.getCurrentCharacterName();e.textContent=i.footerControlsCharacter.replace("{character}",a)}}c.onLanguageChange(r),d.onCharacterChange(()=>{t();const e=document.getElementById("character-btn");if(e){const i=d.getCurrentCharacterName();e.textContent=`🐱 ${i}`}}),r()}window.startNewGame=async function(){if(console.log("🎮 Starting new game..."),!await U()){console.log("❌ User not authenticated, game start cancelled");return}console.log("✅ User authenticated, starting game..."),P()&&(console.log("🔄 Destroying existing game instance"),N()),F()};window.togglePause=function(){const r=P();if(r)if(A=!A,A){r.scene.pause("GameScene");const t=c.getTranslation();document.querySelector(".btn:nth-child(2)").textContent="▶️ "+t.resume,console.log("⏸️ Game paused")}else{r.scene.resume("GameScene");const t=c.getTranslation();document.querySelector(".btn:nth-child(2)").textContent="⏸️ "+t.pause,console.log("▶️ Game resumed")}};window.showInstructions=function(){const r=c.getTranslation();alert(`${r.instructionsTitle}

${r.instructionsObjective}

${r.instructionsControls}
${r.instructionsArrowKeys}
${r.instructionsMouseDrag}
${r.instructionsMobileTouch}

${r.instructionsRules}
${r.instructionsBrownBottles}
${r.instructionsGreenBottles}
${r.instructionsStarPowerups}
${r.instructionsLives}
${r.instructionsTimer}

${r.instructionsTips}
${r.instructionsCatchStars}
${r.instructionsAllGoodMode}
${r.instructionsHighScore}

${r.instructionsGoodLuck}`)};window.testAuth=function(){console.log("🧪 Testing auth flow...");const r=c.getTranslation();alert(`${r.testAuthTitle}

${r.testAuthFeatures}

${r.testAuthIntegration}

${r.testAuthReady}

${r.testAuthTryGame}`)};window.toggleLanguage=function(){c.toggleLanguage(),console.log(`🌍 Language toggled to: ${c.getCurrentLanguage()}`)};window.cycleCharacter=function(){d.cycleCharacter(),console.log(`🐱 Character changed to: ${d.getCurrentCharacterName()}`)};let S=null,v=!1,w=!1;function V(){if(S=P(),!S)return;const r=S.scene.getScene("GameScene");if(r){if(v&&r.character){const{width:t}=r.cameras.main,e=Math.max(40,t*.05),i=Math.max(5,t*.006);r.character.x=Math.max(e,r.character.x-i)}if(w&&r.character){const{width:t}=r.cameras.main,e=Math.max(40,t*.05),i=Math.max(5,t*.006);r.character.x=Math.min(t-e,r.character.x+i)}}}document.addEventListener("DOMContentLoaded",function(){console.log("🚀 Etimuè Bottle Dropper v2.0.0 loaded!"),z();const r=document.getElementById("touch-left"),t=document.getElementById("touch-right");r&&t&&(r.addEventListener("touchstart",e=>{e.preventDefault(),v=!0}),r.addEventListener("touchend",e=>{e.preventDefault(),v=!1}),r.addEventListener("mousedown",e=>{e.preventDefault(),v=!0}),r.addEventListener("mouseup",e=>{e.preventDefault(),v=!1}),t.addEventListener("touchstart",e=>{e.preventDefault(),w=!0}),t.addEventListener("touchend",e=>{e.preventDefault(),w=!1}),t.addEventListener("mousedown",e=>{e.preventDefault(),w=!0}),t.addEventListener("mouseup",e=>{e.preventDefault(),w=!1}),setInterval(V,16))});export{p as a,c as l};
//# sourceMappingURL=index-cfd584fa.js.map
