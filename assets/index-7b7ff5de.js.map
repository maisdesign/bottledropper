{"version":3,"file":"index-7b7ff5de.js","sources":["../../src/scenes/BootScene.ts","../../src/scenes/GameScene.ts","../../src/main.ts","../../index.html?html-proxy&index=1.js"],"sourcesContent":["import { Scene } from 'phaser'\n\nexport class BootScene extends Scene {\n  constructor() {\n    super({ key: 'BootScene' })\n  }\n\n  preload(): void {\n    console.log('üîß BootScene: Starting asset loading...')\n\n    // Create simple loading graphics\n    this.createLoadingUI()\n\n    // Load basic game assets - using simple rectangles for now\n    this.load.image('bottle', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"20\" height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"40\" fill=\"#8B4513\" stroke=\"#654321\" stroke-width=\"2\"/>\n        <rect x=\"5\" y=\"5\" width=\"10\" height=\"30\" fill=\"#A0522D\"/>\n      </svg>\n    `))\n\n    this.load.image('bottle_green', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"20\" height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"40\" fill=\"#228B22\" stroke=\"#006400\" stroke-width=\"2\"/>\n        <rect x=\"5\" y=\"5\" width=\"10\" height=\"30\" fill=\"#32CD32\"/>\n        <text x=\"10\" y=\"25\" text-anchor=\"middle\" fill=\"white\" font-size=\"10\">X</text>\n      </svg>\n    `))\n\n    this.load.image('powerup_star', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n        <polygon points=\"15,2 18,10 27,10 20,16 23,25 15,20 7,25 10,16 3,10 12,10\"\n                 fill=\"#FFD700\" stroke=\"#FFA500\" stroke-width=\"2\"/>\n        <circle cx=\"15\" cy=\"15\" r=\"3\" fill=\"#FFFF00\"/>\n      </svg>\n    `))\n\n    this.load.image('bucket', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"80\" height=\"60\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M10,20 L70,20 L65,55 L15,55 Z\" fill=\"#888888\" stroke=\"#666666\" stroke-width=\"2\"/>\n        <rect x=\"10\" y=\"15\" width=\"60\" height=\"10\" fill=\"#AAAAAA\"/>\n      </svg>\n    `))\n\n    this.load.image('background', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"800\" height=\"600\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <linearGradient id=\"skyGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" style=\"stop-color:#87CEEB;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#E0F6FF;stop-opacity:1\" />\n          </linearGradient>\n        </defs>\n        <rect width=\"800\" height=\"600\" fill=\"url(#skyGradient)\"/>\n      </svg>\n    `))\n  }\n\n  create(): void {\n    console.log('‚úÖ BootScene: Assets loaded, transitioning to GameScene')\n\n    // Smooth transition to game\n    this.cameras.main.fadeOut(300, 0, 0, 0)\n    this.cameras.main.once('camerafadeoutcomplete', () => {\n      this.scene.start('GameScene')\n    })\n  }\n\n  private createLoadingUI(): void {\n    const { width, height } = this.cameras.main\n\n    // Loading text\n    const loadingText = this.add.text(width / 2, height / 2 - 50, 'Loading...', {\n      fontSize: '32px',\n      color: '#ffffff',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    // Loading bar background\n    const progressBg = this.add.graphics()\n    progressBg.fillStyle(0x000000, 0.3)\n    progressBg.fillRect(width / 2 - 150, height / 2, 300, 20)\n\n    // Loading bar\n    const progressBar = this.add.graphics()\n\n    // Update loading bar\n    this.load.on('progress', (value: number) => {\n      progressBar.clear()\n      progressBar.fillStyle(0x00ff00)\n      progressBar.fillRect(width / 2 - 150, height / 2, 300 * value, 20)\n    })\n\n    this.load.on('complete', () => {\n      loadingText.setText('Ready!')\n      progressBar.clear()\n      progressBg.clear()\n    })\n  }\n}","import { Scene } from 'phaser'\n\nexport class GameScene extends Scene {\n  private bucket!: Phaser.Physics.Arcade.Image\n  private bottles!: Phaser.Physics.Arcade.Group\n  private powerups!: Phaser.Physics.Arcade.Group\n  private score: number = 0\n  private lives: number = 3\n  private timeLeft: number = 60 // 60 seconds game\n  private scoreText!: Phaser.GameObjects.Text\n  private livesText!: Phaser.GameObjects.Text\n  private timerText!: Phaser.GameObjects.Text\n  private powerupText!: Phaser.GameObjects.Text\n  private spawnTimer!: Phaser.Time.TimerEvent\n  private powerupTimer!: Phaser.Time.TimerEvent\n  private gameTimer!: Phaser.Time.TimerEvent\n  private allGoodTimer!: Phaser.Time.TimerEvent\n  private gameStarted: boolean = false\n  private gameOver: boolean = false\n  private allGoodMode: boolean = false\n  private allGoodTimeLeft: number = 0\n  private gameOverTexts: Phaser.GameObjects.Text[] = []\n\n  constructor() {\n    super({ key: 'GameScene' })\n  }\n\n  create(): void {\n    console.log('üéÆ GameScene: Initializing game...')\n\n    // Set background\n    const { width, height } = this.cameras.main\n    this.add.image(width / 2, height / 2, 'background')\n\n    this.setupUI()\n    this.setupGameObjects()\n    this.setupInput()\n    this.setupCollisions()\n\n    // Fade in\n    this.cameras.main.fadeIn(300, 0, 0, 0)\n\n    console.log('‚úÖ GameScene: Ready to play!')\n  }\n\n  private setupUI(): void {\n    const { width, height } = this.cameras.main\n\n    // Score display\n    this.scoreText = this.add.text(16, 16, 'Score: 0', {\n      fontSize: '24px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    })\n\n    // Lives display\n    this.livesText = this.add.text(16, 50, 'Lives: ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è', {\n      fontSize: '20px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    })\n\n    // Timer display\n    this.timerText = this.add.text(width / 2, 16, 'Time: 60s', {\n      fontSize: '24px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    // Power-up indicator\n    this.powerupText = this.add.text(width - 150, 16, '', {\n      fontSize: '18px',\n      color: '#FFD700',\n      fontFamily: 'Arial'\n    })\n\n    // Instructions\n    this.add.text(width / 2, height * 0.12, 'Use arrow keys or drag to move the bucket!', {\n      fontSize: Math.min(18, width * 0.025) + 'px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    this.add.text(width / 2, height * 0.16, 'üç∂ Catch brown bottles: +1pt | üü¢ Avoid green bottles: -1 life | ‚≠ê Star: All Good!', {\n      fontSize: Math.min(14, width * 0.018) + 'px',\n      color: '#333333',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n  }\n\n  private setupGameObjects(): void {\n    const { width, height } = this.cameras.main\n\n    // Create bucket\n    this.bucket = this.physics.add.image(width / 2, height - 80, 'bucket')\n    this.bucket.setCollideWorldBounds(true)\n    this.bucket.setImmovable(true)\n\n    // Create bottles group\n    this.bottles = this.physics.add.group({\n      defaultKey: 'bottle',\n      maxSize: 15\n    })\n\n    // Create powerups group\n    this.powerups = this.physics.add.group({\n      defaultKey: 'powerup_star',\n      maxSize: 3\n    })\n  }\n\n  private setupInput(): void {\n    // Keyboard controls\n    const cursors = this.input.keyboard?.createCursorKeys()\n    if (cursors) {\n      // Handle keyboard input in update loop\n    }\n\n    // Mouse/Touch controls\n    this.input.on('pointermove', (pointer: Phaser.Input.Pointer) => {\n      if (pointer.isDown) {\n        const { width } = this.cameras.main\n        const margin = Math.max(40, width * 0.05) // 5% margin or minimum 40px\n        this.bucket.x = Phaser.Math.Clamp(pointer.x, margin, width - margin)\n      }\n    })\n\n    this.input.on('pointerdown', () => {\n      // Only allow game start if not in game over state\n      if (!this.gameOver) {\n        this.startGame()\n      }\n    })\n  }\n\n  private setupCollisions(): void {\n    this.physics.add.overlap(\n      this.bucket,\n      this.bottles,\n      this.catchBottle,\n      undefined,\n      this\n    )\n\n    this.physics.add.overlap(\n      this.bucket,\n      this.powerups,\n      this.catchPowerup,\n      undefined,\n      this\n    )\n  }\n\n  private startGame(): void {\n    if (this.gameStarted) return\n\n    // Clear any previous game over texts\n    this.gameOverTexts.forEach(text => text.destroy())\n    this.gameOverTexts = []\n\n    // Reset game state for fresh start\n    this.lives = 3\n    this.score = 0\n    this.timeLeft = 60\n    this.gameOver = false\n    this.allGoodMode = false\n    this.allGoodTimeLeft = 0\n\n    // Update UI\n    this.updateLivesDisplay()\n    this.scoreText.setText(`Score: ${this.score}`)\n    this.timerText.setText(`Time: ${this.timeLeft}s`)\n    this.powerupText.setText('')\n\n    this.gameStarted = true\n    console.log('üöÄ GAME START DEBUG (RESET):')\n    console.log(`üíó Starting Lives: ${this.lives}`)\n    console.log(`üéØ Starting Score: ${this.score}`)\n    console.log(`‚è∞ Starting Time: ${this.timeLeft}s`)\n    console.log(`‚≠ê All Good Mode: ${this.allGoodMode}`)\n\n    // Start spawning bottles\n    this.spawnTimer = this.time.addEvent({\n      delay: 1000,\n      callback: this.spawnBottle,\n      callbackScope: this,\n      loop: true\n    })\n\n    // Start spawning powerups (random intervals)\n    this.scheduleNextPowerup()\n\n    // Start game timer\n    this.gameTimer = this.time.addEvent({\n      delay: 1000,\n      callback: this.updateTimer,\n      callbackScope: this,\n      loop: true\n    })\n  }\n\n  private spawnBottle(): void {\n    if (this.gameOver) return\n\n    const { width } = this.cameras.main\n    // Ensure bottles spawn well within screen bounds\n    const minX = 60\n    const maxX = width - 60\n    const x = Phaser.Math.Between(minX, maxX)\n\n    // 20% chance for green bottle (poison)\n    const isGreen = Math.random() < 0.2\n\n    const bottle = this.bottles.get(x, -50, 'bottle')\n    if (bottle) {\n      bottle.setActive(true)\n      bottle.setVisible(true)\n\n      // Change texture based on bottle type\n      if (isGreen) {\n        bottle.setTexture('bottle_green')\n        console.log(`üü¢ GREEN bottle spawned at x:${x}`)\n      } else {\n        bottle.setTexture('bottle')\n        console.log(`üç∂ BROWN bottle spawned at x:${x}`)\n      }\n\n      bottle.body.velocity.y = 200\n      bottle.body.velocity.x = Phaser.Math.Between(-50, 50)\n\n      // Set collision bounds to detect when bottle hits ground\n      bottle.body.setCollideWorldBounds(true)\n      bottle.body.setBounce(0)\n\n      // Check for ground collision in update loop\n      bottle.setData('checkGround', true)\n      bottle.setData('isGreen', isGreen)\n    }\n  }\n\n  private scheduleNextPowerup(): void {\n    if (this.gameOver) return\n\n    // More random delay between 5-30 seconds with weighted distribution\n    const minDelay = 5000\n    const maxDelay = 30000\n\n    // Use exponential distribution for more variety (favor shorter intervals but allow long ones)\n    const random = Math.random()\n    const exponentialFactor = Math.pow(random, 1.5) // Creates weighted distribution\n    const randomDelay = minDelay + (maxDelay - minDelay) * exponentialFactor\n\n    console.log(`‚≠ê Next power-up scheduled in ${(randomDelay / 1000).toFixed(1)}s`)\n\n    this.powerupTimer = this.time.addEvent({\n      delay: randomDelay,\n      callback: () => {\n        this.spawnPowerup()\n        this.scheduleNextPowerup() // Schedule the next one\n      },\n      callbackScope: this\n    })\n  }\n\n  private spawnPowerup(): void {\n    if (this.gameOver) return\n\n    const { width } = this.cameras.main\n    // Ensure powerups spawn well within screen bounds\n    const minX = 80\n    const maxX = width - 80\n    const x = Phaser.Math.Between(minX, maxX)\n\n    const powerup = this.powerups.get(x, -30, 'powerup_star')\n    if (powerup) {\n      powerup.setActive(true)\n      powerup.setVisible(true)\n\n      // Random velocity for more dynamic movement\n      const velocityY = Phaser.Math.Between(120, 180)\n      const velocityX = Phaser.Math.Between(-30, 30)\n\n      powerup.body.velocity.y = velocityY\n      powerup.body.velocity.x = velocityX\n\n      // Set collision bounds\n      powerup.body.setCollideWorldBounds(true)\n      powerup.body.setBounce(0)\n\n      // Check for ground collision in update loop\n      powerup.setData('checkGround', true)\n\n      console.log(`‚≠ê Power-up spawned at x:${x} with velocity(${velocityX}, ${velocityY})`)\n    }\n  }\n\n  private catchBottle(_bucket: any, bottle: any): void {\n    // Check if bottle is already inactive to prevent multiple scoring\n    if (!bottle.active) return\n\n    const isGreen = bottle.getData('isGreen')\n    console.log(`üéØ BOTTLE CATCH DEBUG:`)\n    console.log(`üç∂ Bottle type: ${isGreen ? 'GREEN (poison)' : 'BROWN (normal)'}`)\n    console.log(`‚≠ê All Good Mode: ${this.allGoodMode}`)\n    console.log(`üíó Lives before catch: ${this.lives}`)\n\n    // Remove caught bottle immediately\n    this.bottles.killAndHide(bottle)\n    bottle.setActive(false)\n    bottle.setVisible(false)\n\n    if (isGreen && !this.allGoodMode) {\n      // Green bottle without All Good mode = lose life\n      console.log(`üö® GREEN BOTTLE CAUGHT WITHOUT ALL GOOD - LOSING LIFE!`)\n      this.loseLife()\n    } else {\n      // Normal bottle or All Good mode active = gain points\n      this.score += 1\n      this.scoreText.setText(`Score: ${this.score}`)\n      console.log(`‚úÖ ${isGreen ? 'Green bottle (All Good active)' : 'Brown bottle'} caught! +1 point. Score: ${this.score}`)\n    }\n  }\n\n  private catchPowerup(_bucket: any, powerup: any): void {\n    // Check if powerup is already inactive\n    if (!powerup.active) return\n\n    console.log(`‚≠ê POWERUP CATCH DEBUG:`)\n    console.log(`üíó Lives before powerup: ${this.lives}`)\n\n    // Remove caught powerup immediately\n    this.powerups.killAndHide(powerup)\n    powerup.setActive(false)\n    powerup.setVisible(false)\n\n    // Activate All Good mode for 10 seconds\n    this.activateAllGoodMode()\n\n    console.log(`‚úÖ Power-up caught! All Good mode activated! Lives unchanged: ${this.lives}`)\n  }\n\n  private loseLife(): void {\n    if (this.gameOver) return\n\n    // Get stack trace to see who called this\n    const stack = new Error().stack\n    console.warn(`üö® LIFE LOST DEBUG:`)\n    console.warn(`üíî Lives before: ${this.lives}`)\n    console.warn(`üîç Called from:`, stack?.split('\\n').slice(1, 4))\n    console.warn(`‚≠ê All Good Mode: ${this.allGoodMode}`)\n\n    this.lives -= 1\n    this.updateLivesDisplay()\n\n    console.warn(`üíî Lives after: ${this.lives}`)\n\n    if (this.lives <= 0) {\n      console.warn(`‚ò†Ô∏è GAME OVER - No lives remaining`)\n      this.endGame()\n    }\n  }\n\n  private updateLivesDisplay(): void {\n    const hearts = '‚ù§Ô∏è'.repeat(this.lives)\n    this.livesText.setText(`Lives: ${hearts}`)\n  }\n\n  private updateTimer(): void {\n    if (this.gameOver) return\n\n    this.timeLeft -= 1\n    this.timerText.setText(`Time: ${this.timeLeft}s`)\n\n    if (this.timeLeft <= 0) {\n      this.endGame()\n    }\n  }\n\n  private activateAllGoodMode(): void {\n    this.allGoodMode = true\n    this.allGoodTimeLeft = 10\n\n    // Update UI\n    this.powerupText.setText(`‚≠ê ALL GOOD: ${this.allGoodTimeLeft}s`)\n\n    // Start countdown timer\n    if (this.allGoodTimer) {\n      this.allGoodTimer.destroy()\n    }\n\n    this.allGoodTimer = this.time.addEvent({\n      delay: 1000,\n      callback: this.updateAllGoodMode,\n      callbackScope: this,\n      loop: true\n    })\n  }\n\n  private updateAllGoodMode(): void {\n    if (!this.allGoodMode) return\n\n    this.allGoodTimeLeft -= 1\n    this.powerupText.setText(`‚≠ê ALL GOOD: ${this.allGoodTimeLeft}s`)\n\n    if (this.allGoodTimeLeft <= 0) {\n      this.deactivateAllGoodMode()\n    }\n  }\n\n  private deactivateAllGoodMode(): void {\n    this.allGoodMode = false\n    this.allGoodTimeLeft = 0\n    this.powerupText.setText('')\n\n    if (this.allGoodTimer) {\n      this.allGoodTimer.destroy()\n    }\n\n    console.log('‚≠ê All Good mode deactivated')\n  }\n\n  private endGame(): void {\n    this.gameOver = true\n    this.gameStarted = false\n\n    // Stop all timers\n    if (this.spawnTimer) this.spawnTimer.destroy()\n    if (this.powerupTimer) this.powerupTimer.destroy()\n    if (this.gameTimer) this.gameTimer.destroy()\n    if (this.allGoodTimer) this.allGoodTimer.destroy()\n\n    // Deactivate any active powerups\n    this.deactivateAllGoodMode()\n\n    // Show game over message\n    const { width, height } = this.cameras.main\n\n    const gameOverText = this.add.text(width / 2, height / 2, 'GAME OVER!', {\n      fontSize: Math.min(48, width * 0.06) + 'px',\n      color: '#ff0000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    const finalScoreText = this.add.text(width / 2, height / 2 + 50, `Final Score: ${this.score}`, {\n      fontSize: Math.min(24, width * 0.03) + 'px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    const restartText = this.add.text(width / 2, height / 2 + 100, 'Click \"New Game\" to restart', {\n      fontSize: Math.min(18, width * 0.025) + 'px',\n      color: '#666666',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    // Store game over texts for cleanup\n    this.gameOverTexts.push(gameOverText, finalScoreText, restartText)\n\n    console.log(`üéÆ Game Over! Final Score: ${this.score}`)\n  }\n\n  update(): void {\n    if (this.gameOver) return\n\n    const { width, height } = this.cameras.main\n\n    // Keyboard controls\n    const cursors = this.input.keyboard?.createCursorKeys()\n    if (cursors) {\n      const margin = Math.max(40, width * 0.05) // 5% margin or minimum 40px\n      const speed = Math.max(5, width * 0.006) // Responsive speed based on screen width\n      if (cursors.left?.isDown) {\n        this.bucket.x = Math.max(margin, this.bucket.x - speed)\n      } else if (cursors.right?.isDown) {\n        this.bucket.x = Math.min(width - margin, this.bucket.x + speed)\n      }\n    }\n\n    // Check bottles that hit the ground\n    this.bottles.children.entries.forEach((bottle: any) => {\n      if (bottle.active && bottle.getData('checkGround')) {\n        // Check if bottle hit the bottom (ground)\n        if (bottle.y >= height - 20) { // Near bottom of screen\n          const isGreen = bottle.getData('isGreen')\n          console.log(`üåç GROUND HIT: ${isGreen ? 'GREEN' : 'BROWN'} bottle hit ground - NO LIFE LOSS`)\n\n          this.bottles.killAndHide(bottle)\n          bottle.setActive(false)\n          bottle.setVisible(false)\n          // No life loss for bottles hitting ground - only when catching green bottles\n        }\n      }\n    })\n\n    // Check powerups that hit the ground\n    this.powerups.children.entries.forEach((powerup: any) => {\n      if (powerup.active && powerup.getData('checkGround')) {\n        // Check if powerup hit the bottom (ground)\n        if (powerup.y >= height - 20) { // Near bottom of screen\n          this.powerups.killAndHide(powerup)\n          powerup.setActive(false)\n          powerup.setVisible(false)\n          // No penalty for missing powerups\n        }\n      }\n    })\n\n    // Auto-start game after a few seconds if not started\n    if (!this.gameStarted && !this.gameOver && this.time.now > 3000) {\n      this.startGame()\n    }\n  }\n\n  shutdown(): void {\n    if (this.spawnTimer) {\n      this.spawnTimer.destroy()\n    }\n    if (this.powerupTimer) {\n      this.powerupTimer.destroy()\n    }\n    if (this.gameTimer) {\n      this.gameTimer.destroy()\n    }\n    if (this.allGoodTimer) {\n      this.allGoodTimer.destroy()\n    }\n  }\n}","import { Game, Types } from 'phaser'\nimport { BootScene } from '@/scenes/BootScene'\nimport { GameScene } from '@/scenes/GameScene'\n\n// Game configuration\nconst config: Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  width: 800,\n  height: 600,\n  parent: 'game-container',\n  backgroundColor: '#87CEEB',\n  scale: {\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    min: {\n      width: 300,\n      height: 400\n    },\n    max: {\n      width: 1200,\n      height: 900\n    }\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { x: 0, y: 300 },\n      debug: false\n    }\n  },\n  scene: [BootScene, GameScene]\n}\n\n// Initialize game\nlet game: Game | null = null\n\nexport function initializeGame(): Game {\n  if (game) {\n    game.destroy(true)\n  }\n\n  game = new Game(config)\n\n  // Development helper - only expose in dev mode\n  if (import.meta.env?.MODE === 'development') {\n    (window as any).game = game\n  }\n\n  return game\n}\n\nexport function getGame(): Game | null {\n  return game\n}\n\nexport function destroyGame(): void {\n  if (game) {\n    game.destroy(true)\n    game = null\n  }\n}\n\n// Auto-initialize if game container exists\ndocument.addEventListener('DOMContentLoaded', () => {\n  const gameContainer = document.getElementById('game-container')\n  if (gameContainer) {\n    initializeGame()\n  }\n})","\n    import { initializeGame, getGame, destroyGame } from './src/main.ts'\n\n    // Global game state\n    let gamePaused = false\n\n    window.startNewGame = function() {\n      console.log('üéÆ Starting new game...')\n      destroyGame()\n      initializeGame()\n    }\n\n    window.togglePause = function() {\n      const game = getGame()\n      if (!game) return\n\n      gamePaused = !gamePaused\n\n      if (gamePaused) {\n        game.scene.pause('GameScene')\n        document.querySelector('.btn:nth-child(2)').textContent = '‚ñ∂Ô∏è Resume'\n        console.log('‚è∏Ô∏è Game paused')\n      } else {\n        game.scene.resume('GameScene')\n        document.querySelector('.btn:nth-child(2)').textContent = '‚è∏Ô∏è Pause'\n        console.log('‚ñ∂Ô∏è Game resumed')\n      }\n    }\n\n    window.showInstructions = function() {\n      alert(`üéÆ How to Play:\n\nüéØ Objective: Catch falling bottles with your bucket!\n\nüïπÔ∏è Controls:\n‚Ä¢ Use ‚Üê ‚Üí arrow keys to move\n‚Ä¢ Or click and drag with mouse/touch\n‚Ä¢ Click anywhere to start the game\n\nüèÜ Scoring:\n‚Ä¢ Each bottle caught = 10 points\n‚Ä¢ Try to catch as many as possible!\n\nGood luck!`)\n    }\n\n    // Mobile touch controls\n    let gameInstance = null\n    let touchLeftPressed = false\n    let touchRightPressed = false\n\n    function handleTouchControls() {\n      gameInstance = getGame()\n      if (!gameInstance) return\n\n      const gameScene = gameInstance.scene.getScene('GameScene')\n      if (!gameScene) return\n\n      // Simulate keyboard input\n      if (touchLeftPressed && gameScene.bucket) {\n        const { width } = gameScene.cameras.main\n        const margin = Math.max(40, width * 0.05)\n        const speed = Math.max(5, width * 0.006)\n        gameScene.bucket.x = Math.max(margin, gameScene.bucket.x - speed)\n      }\n      if (touchRightPressed && gameScene.bucket) {\n        const { width } = gameScene.cameras.main\n        const margin = Math.max(40, width * 0.05)\n        const speed = Math.max(5, width * 0.006)\n        gameScene.bucket.x = Math.min(width - margin, gameScene.bucket.x + speed)\n      }\n    }\n\n    // Auto-initialize when page loads\n    document.addEventListener('DOMContentLoaded', function() {\n      console.log('üöÄ Etimu√® Bottle Dropper v2.0.0 loaded!')\n      initializeGame()\n\n      // Setup mobile touch controls\n      const touchLeft = document.getElementById('touch-left')\n      const touchRight = document.getElementById('touch-right')\n\n      if (touchLeft && touchRight) {\n        // Left button events\n        touchLeft.addEventListener('touchstart', (e) => {\n          e.preventDefault()\n          touchLeftPressed = true\n        })\n        touchLeft.addEventListener('touchend', (e) => {\n          e.preventDefault()\n          touchLeftPressed = false\n        })\n        touchLeft.addEventListener('mousedown', (e) => {\n          e.preventDefault()\n          touchLeftPressed = true\n        })\n        touchLeft.addEventListener('mouseup', (e) => {\n          e.preventDefault()\n          touchLeftPressed = false\n        })\n\n        // Right button events\n        touchRight.addEventListener('touchstart', (e) => {\n          e.preventDefault()\n          touchRightPressed = true\n        })\n        touchRight.addEventListener('touchend', (e) => {\n          e.preventDefault()\n          touchRightPressed = false\n        })\n        touchRight.addEventListener('mousedown', (e) => {\n          e.preventDefault()\n          touchRightPressed = true\n        })\n        touchRight.addEventListener('mouseup', (e) => {\n          e.preventDefault()\n          touchRightPressed = false\n        })\n\n        // Continuous movement loop\n        setInterval(handleTouchControls, 16) // ~60fps\n      }\n    })\n  "],"names":["BootScene","Scene","width","height","loadingText","progressBg","progressBar","value","GameScene","__publicField","_a","pointer","margin","text","minX","maxX","x","isGreen","bottle","minDelay","maxDelay","random","exponentialFactor","randomDelay","powerup","velocityY","velocityX","_bucket","stack","hearts","gameOverText","finalScoreText","restartText","cursors","speed","_b","_c","config","game","initializeGame","Game","getGame","destroyGame","gamePaused","gameInstance","touchLeftPressed","touchRightPressed","handleTouchControls","gameScene","touchLeft","touchRight"],"mappings":"k5BAEO,MAAMA,UAAkBC,EAAAA,KAAM,CACnC,aAAc,CACN,MAAA,CAAE,IAAK,WAAA,CAAa,CAC5B,CAEA,SAAgB,CACd,QAAQ,IAAI,yCAAyC,EAGrD,KAAK,gBAAgB,EAGrB,KAAK,KAAK,MAAM,SAAU,6BAA+B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,KAK7D,CAAC,EAEF,KAAK,KAAK,MAAM,eAAgB,6BAA+B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMnE,CAAC,EAEF,KAAK,KAAK,MAAM,eAAgB,6BAA+B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMnE,CAAC,EAEF,KAAK,KAAK,MAAM,SAAU,6BAA+B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,KAK7D,CAAC,EAEF,KAAK,KAAK,MAAM,aAAc,6BAA+B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUjE,CAAC,CACJ,CAEA,QAAe,CACb,QAAQ,IAAI,wDAAwD,EAGpE,KAAK,QAAQ,KAAK,QAAQ,IAAK,EAAG,EAAG,CAAC,EACtC,KAAK,QAAQ,KAAK,KAAK,wBAAyB,IAAM,CAC/C,KAAA,MAAM,MAAM,WAAW,CAAA,CAC7B,CACH,CAEQ,iBAAwB,CAC9B,KAAM,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAI,KAAK,QAAQ,KAGjCC,EAAc,KAAK,IAAI,KAAKF,EAAQ,EAAGC,EAAS,EAAI,GAAI,aAAc,CAC1E,SAAU,OACV,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,EAGVE,EAAa,KAAK,IAAI,SAAS,EAC1BA,EAAA,UAAU,EAAU,EAAG,EAClCA,EAAW,SAASH,EAAQ,EAAI,IAAKC,EAAS,EAAG,IAAK,EAAE,EAGlD,MAAAG,EAAc,KAAK,IAAI,SAAS,EAGtC,KAAK,KAAK,GAAG,WAAaC,GAAkB,CAC1CD,EAAY,MAAM,EAClBA,EAAY,UAAU,KAAQ,EAClBA,EAAA,SAASJ,EAAQ,EAAI,IAAKC,EAAS,EAAG,IAAMI,EAAO,EAAE,CAAA,CAClE,EAEI,KAAA,KAAK,GAAG,WAAY,IAAM,CAC7BH,EAAY,QAAQ,QAAQ,EAC5BE,EAAY,MAAM,EAClBD,EAAW,MAAM,CAAA,CAClB,CACH,CACF,CChGO,MAAMG,UAAkBP,EAAAA,KAAM,CAqBnC,aAAc,CACN,MAAA,CAAE,IAAK,WAAA,CAAa,EArBpBQ,EAAA,eACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,aAAgB,GAChBA,EAAA,aAAgB,GAChBA,EAAA,gBAAmB,IACnBA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,qBACAA,EAAA,kBACAA,EAAA,qBACAA,EAAA,mBAAuB,IACvBA,EAAA,gBAAoB,IACpBA,EAAA,mBAAuB,IACvBA,EAAA,uBAA0B,GAC1BA,EAAA,qBAA2C,CAAA,EAInD,CAEA,QAAe,CACb,QAAQ,IAAI,oCAAoC,EAGhD,KAAM,CAAE,MAAAP,EAAO,OAAAC,CAAO,EAAI,KAAK,QAAQ,KACvC,KAAK,IAAI,MAAMD,EAAQ,EAAGC,EAAS,EAAG,YAAY,EAElD,KAAK,QAAQ,EACb,KAAK,iBAAiB,EACtB,KAAK,WAAW,EAChB,KAAK,gBAAgB,EAGrB,KAAK,QAAQ,KAAK,OAAO,IAAK,EAAG,EAAG,CAAC,EAErC,QAAQ,IAAI,6BAA6B,CAC3C,CAEQ,SAAgB,CACtB,KAAM,CAAE,MAAAD,EAAO,OAAAC,CAAO,EAAI,KAAK,QAAQ,KAGvC,KAAK,UAAY,KAAK,IAAI,KAAK,GAAI,GAAI,WAAY,CACjD,SAAU,OACV,MAAO,UACP,WAAY,OAAA,CACb,EAGD,KAAK,UAAY,KAAK,IAAI,KAAK,GAAI,GAAI,gBAAiB,CACtD,SAAU,OACV,MAAO,UACP,WAAY,OAAA,CACb,EAGD,KAAK,UAAY,KAAK,IAAI,KAAKD,EAAQ,EAAG,GAAI,YAAa,CACzD,SAAU,OACV,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,EAGhB,KAAK,YAAc,KAAK,IAAI,KAAKA,EAAQ,IAAK,GAAI,GAAI,CACpD,SAAU,OACV,MAAO,UACP,WAAY,OAAA,CACb,EAGD,KAAK,IAAI,KAAKA,EAAQ,EAAGC,EAAS,IAAM,6CAA8C,CACpF,SAAU,KAAK,IAAI,GAAID,EAAQ,IAAK,EAAI,KACxC,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,EAEhB,KAAK,IAAI,KAAKA,EAAQ,EAAGC,EAAS,IAAM,qFAAsF,CAC5H,SAAU,KAAK,IAAI,GAAID,EAAQ,IAAK,EAAI,KACxC,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,CAClB,CAEQ,kBAAyB,CAC/B,KAAM,CAAE,MAAAA,EAAO,OAAAC,CAAO,EAAI,KAAK,QAAQ,KAGlC,KAAA,OAAS,KAAK,QAAQ,IAAI,MAAMD,EAAQ,EAAGC,EAAS,GAAI,QAAQ,EAChE,KAAA,OAAO,sBAAsB,EAAI,EACjC,KAAA,OAAO,aAAa,EAAI,EAG7B,KAAK,QAAU,KAAK,QAAQ,IAAI,MAAM,CACpC,WAAY,SACZ,QAAS,EAAA,CACV,EAGD,KAAK,SAAW,KAAK,QAAQ,IAAI,MAAM,CACrC,WAAY,eACZ,QAAS,CAAA,CACV,CACH,CAEQ,YAAmB,QAETO,EAAA,KAAK,MAAM,WAAX,MAAAA,EAAqB,mBAMrC,KAAK,MAAM,GAAG,cAAgBC,GAAkC,CAC9D,GAAIA,EAAQ,OAAQ,CAClB,KAAM,CAAE,MAAAT,CAAU,EAAA,KAAK,QAAQ,KACzBU,EAAS,KAAK,IAAI,GAAIV,EAAQ,GAAI,EACnC,KAAA,OAAO,EAAI,OAAO,KAAK,MAAMS,EAAQ,EAAGC,EAAQV,EAAQU,CAAM,CACrE,CAAA,CACD,EAEI,KAAA,MAAM,GAAG,cAAe,IAAM,CAE5B,KAAK,UACR,KAAK,UAAU,CACjB,CACD,CACH,CAEQ,iBAAwB,CAC9B,KAAK,QAAQ,IAAI,QACf,KAAK,OACL,KAAK,QACL,KAAK,YACL,OACA,IAAA,EAGF,KAAK,QAAQ,IAAI,QACf,KAAK,OACL,KAAK,SACL,KAAK,aACL,OACA,IAAA,CAEJ,CAEQ,WAAkB,CACpB,KAAK,cAGT,KAAK,cAAc,QAAgBC,GAAAA,EAAK,SAAS,EACjD,KAAK,cAAgB,GAGrB,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,SAAW,GAChB,KAAK,SAAW,GAChB,KAAK,YAAc,GACnB,KAAK,gBAAkB,EAGvB,KAAK,mBAAmB,EACxB,KAAK,UAAU,QAAQ,UAAU,KAAK,KAAK,EAAE,EAC7C,KAAK,UAAU,QAAQ,SAAS,KAAK,QAAQ,GAAG,EAC3C,KAAA,YAAY,QAAQ,EAAE,EAE3B,KAAK,YAAc,GACnB,QAAQ,IAAI,8BAA8B,EAC1C,QAAQ,IAAI,sBAAsB,KAAK,KAAK,EAAE,EAC9C,QAAQ,IAAI,sBAAsB,KAAK,KAAK,EAAE,EAC9C,QAAQ,IAAI,oBAAoB,KAAK,QAAQ,GAAG,EAChD,QAAQ,IAAI,oBAAoB,KAAK,WAAW,EAAE,EAG7C,KAAA,WAAa,KAAK,KAAK,SAAS,CACnC,MAAO,IACP,SAAU,KAAK,YACf,cAAe,KACf,KAAM,EAAA,CACP,EAGD,KAAK,oBAAoB,EAGpB,KAAA,UAAY,KAAK,KAAK,SAAS,CAClC,MAAO,IACP,SAAU,KAAK,YACf,cAAe,KACf,KAAM,EAAA,CACP,EACH,CAEQ,aAAoB,CAC1B,GAAI,KAAK,SAAU,OAEnB,KAAM,CAAE,MAAAX,CAAU,EAAA,KAAK,QAAQ,KAEzBY,EAAO,GACPC,EAAOb,EAAQ,GACfc,EAAI,OAAO,KAAK,QAAQF,EAAMC,CAAI,EAGlCE,EAAU,KAAK,OAAA,EAAW,GAE1BC,EAAS,KAAK,QAAQ,IAAIF,EAAG,IAAK,QAAQ,EAC5CE,IACFA,EAAO,UAAU,EAAI,EACrBA,EAAO,WAAW,EAAI,EAGlBD,GACFC,EAAO,WAAW,cAAc,EACxB,QAAA,IAAI,gCAAgCF,CAAC,EAAE,IAE/CE,EAAO,WAAW,QAAQ,EAClB,QAAA,IAAI,gCAAgCF,CAAC,EAAE,GAG1CE,EAAA,KAAK,SAAS,EAAI,IACzBA,EAAO,KAAK,SAAS,EAAI,OAAO,KAAK,QAAQ,IAAK,EAAE,EAG7CA,EAAA,KAAK,sBAAsB,EAAI,EAC/BA,EAAA,KAAK,UAAU,CAAC,EAGhBA,EAAA,QAAQ,cAAe,EAAI,EAC3BA,EAAA,QAAQ,UAAWD,CAAO,EAErC,CAEQ,qBAA4B,CAClC,GAAI,KAAK,SAAU,OAGnB,MAAME,EAAW,IACXC,EAAW,IAGXC,EAAS,KAAK,SACdC,EAAoB,KAAK,IAAID,EAAQ,GAAG,EACxCE,EAAcJ,GAAYC,EAAWD,GAAYG,EAEvD,QAAQ,IAAI,iCAAiCC,EAAc,KAAM,QAAQ,CAAC,CAAC,GAAG,EAEzE,KAAA,aAAe,KAAK,KAAK,SAAS,CACrC,MAAOA,EACP,SAAU,IAAM,CACd,KAAK,aAAa,EAClB,KAAK,oBAAoB,CAC3B,EACA,cAAe,IAAA,CAChB,CACH,CAEQ,cAAqB,CAC3B,GAAI,KAAK,SAAU,OAEnB,KAAM,CAAE,MAAArB,CAAU,EAAA,KAAK,QAAQ,KAEzBY,EAAO,GACPC,EAAOb,EAAQ,GACfc,EAAI,OAAO,KAAK,QAAQF,EAAMC,CAAI,EAElCS,EAAU,KAAK,SAAS,IAAIR,EAAG,IAAK,cAAc,EACxD,GAAIQ,EAAS,CACXA,EAAQ,UAAU,EAAI,EACtBA,EAAQ,WAAW,EAAI,EAGvB,MAAMC,EAAY,OAAO,KAAK,QAAQ,IAAK,GAAG,EACxCC,EAAY,OAAO,KAAK,QAAQ,IAAK,EAAE,EAErCF,EAAA,KAAK,SAAS,EAAIC,EAClBD,EAAA,KAAK,SAAS,EAAIE,EAGlBF,EAAA,KAAK,sBAAsB,EAAI,EAC/BA,EAAA,KAAK,UAAU,CAAC,EAGhBA,EAAA,QAAQ,cAAe,EAAI,EAEnC,QAAQ,IAAI,2BAA2BR,CAAC,kBAAkBU,CAAS,KAAKD,CAAS,GAAG,CACtF,CACF,CAEQ,YAAYE,EAAcT,EAAmB,CAEnD,GAAI,CAACA,EAAO,OAAQ,OAEd,MAAAD,EAAUC,EAAO,QAAQ,SAAS,EACxC,QAAQ,IAAI,wBAAwB,EACpC,QAAQ,IAAI,mBAAmBD,EAAU,iBAAmB,gBAAgB,EAAE,EAC9E,QAAQ,IAAI,oBAAoB,KAAK,WAAW,EAAE,EAClD,QAAQ,IAAI,0BAA0B,KAAK,KAAK,EAAE,EAG7C,KAAA,QAAQ,YAAYC,CAAM,EAC/BA,EAAO,UAAU,EAAK,EACtBA,EAAO,WAAW,EAAK,EAEnBD,GAAW,CAAC,KAAK,aAEnB,QAAQ,IAAI,wDAAwD,EACpE,KAAK,SAAS,IAGd,KAAK,OAAS,EACd,KAAK,UAAU,QAAQ,UAAU,KAAK,KAAK,EAAE,EACrC,QAAA,IAAI,KAAKA,EAAU,iCAAmC,cAAc,6BAA6B,KAAK,KAAK,EAAE,EAEzH,CAEQ,aAAaU,EAAcH,EAAoB,CAEhDA,EAAQ,SAEb,QAAQ,IAAI,wBAAwB,EACpC,QAAQ,IAAI,4BAA4B,KAAK,KAAK,EAAE,EAG/C,KAAA,SAAS,YAAYA,CAAO,EACjCA,EAAQ,UAAU,EAAK,EACvBA,EAAQ,WAAW,EAAK,EAGxB,KAAK,oBAAoB,EAEzB,QAAQ,IAAI,gEAAgE,KAAK,KAAK,EAAE,EAC1F,CAEQ,UAAiB,CACvB,GAAI,KAAK,SAAU,OAGb,MAAAI,EAAQ,IAAI,MAAQ,EAAA,MAC1B,QAAQ,KAAK,qBAAqB,EAClC,QAAQ,KAAK,oBAAoB,KAAK,KAAK,EAAE,EACrC,QAAA,KAAK,kBAAmBA,GAAA,YAAAA,EAAO,MAAM;AAAA,GAAM,MAAM,EAAG,EAAE,EAC9D,QAAQ,KAAK,oBAAoB,KAAK,WAAW,EAAE,EAEnD,KAAK,OAAS,EACd,KAAK,mBAAmB,EAExB,QAAQ,KAAK,mBAAmB,KAAK,KAAK,EAAE,EAExC,KAAK,OAAS,IAChB,QAAQ,KAAK,mCAAmC,EAChD,KAAK,QAAQ,EAEjB,CAEQ,oBAA2B,CACjC,MAAMC,EAAS,KAAK,OAAO,KAAK,KAAK,EACrC,KAAK,UAAU,QAAQ,UAAUA,CAAM,EAAE,CAC3C,CAEQ,aAAoB,CACtB,KAAK,WAET,KAAK,UAAY,EACjB,KAAK,UAAU,QAAQ,SAAS,KAAK,QAAQ,GAAG,EAE5C,KAAK,UAAY,GACnB,KAAK,QAAQ,EAEjB,CAEQ,qBAA4B,CAClC,KAAK,YAAc,GACnB,KAAK,gBAAkB,GAGvB,KAAK,YAAY,QAAQ,eAAe,KAAK,eAAe,GAAG,EAG3D,KAAK,cACP,KAAK,aAAa,UAGf,KAAA,aAAe,KAAK,KAAK,SAAS,CACrC,MAAO,IACP,SAAU,KAAK,kBACf,cAAe,KACf,KAAM,EAAA,CACP,CACH,CAEQ,mBAA0B,CAC3B,KAAK,cAEV,KAAK,iBAAmB,EACxB,KAAK,YAAY,QAAQ,eAAe,KAAK,eAAe,GAAG,EAE3D,KAAK,iBAAmB,GAC1B,KAAK,sBAAsB,EAE/B,CAEQ,uBAA8B,CACpC,KAAK,YAAc,GACnB,KAAK,gBAAkB,EAClB,KAAA,YAAY,QAAQ,EAAE,EAEvB,KAAK,cACP,KAAK,aAAa,UAGpB,QAAQ,IAAI,6BAA6B,CAC3C,CAEQ,SAAgB,CACtB,KAAK,SAAW,GAChB,KAAK,YAAc,GAGf,KAAK,YAAY,KAAK,WAAW,UACjC,KAAK,cAAc,KAAK,aAAa,UACrC,KAAK,WAAW,KAAK,UAAU,UAC/B,KAAK,cAAc,KAAK,aAAa,UAGzC,KAAK,sBAAsB,EAG3B,KAAM,CAAE,MAAA3B,EAAO,OAAAC,CAAO,EAAI,KAAK,QAAQ,KAEjC2B,EAAe,KAAK,IAAI,KAAK5B,EAAQ,EAAGC,EAAS,EAAG,aAAc,CACtE,SAAU,KAAK,IAAI,GAAID,EAAQ,GAAI,EAAI,KACvC,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,EAEV6B,EAAiB,KAAK,IAAI,KAAK7B,EAAQ,EAAGC,EAAS,EAAI,GAAI,gBAAgB,KAAK,KAAK,GAAI,CAC7F,SAAU,KAAK,IAAI,GAAID,EAAQ,GAAI,EAAI,KACvC,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,EAEV8B,EAAc,KAAK,IAAI,KAAK9B,EAAQ,EAAGC,EAAS,EAAI,IAAK,8BAA+B,CAC5F,SAAU,KAAK,IAAI,GAAID,EAAQ,IAAK,EAAI,KACxC,MAAO,UACP,WAAY,OAAA,CACb,EAAE,UAAU,EAAG,EAGhB,KAAK,cAAc,KAAK4B,EAAcC,EAAgBC,CAAW,EAEjE,QAAQ,IAAI,8BAA8B,KAAK,KAAK,EAAE,CACxD,CAEA,QAAe,WACb,GAAI,KAAK,SAAU,OAEnB,KAAM,CAAE,MAAA9B,EAAO,OAAAC,CAAO,EAAI,KAAK,QAAQ,KAGjC8B,GAAUvB,EAAA,KAAK,MAAM,WAAX,YAAAA,EAAqB,mBACrC,GAAIuB,EAAS,CACX,MAAMrB,EAAS,KAAK,IAAI,GAAIV,EAAQ,GAAI,EAClCgC,EAAQ,KAAK,IAAI,EAAGhC,EAAQ,IAAK,GACnCiC,EAAAF,EAAQ,OAAR,MAAAE,EAAc,OACX,KAAA,OAAO,EAAI,KAAK,IAAIvB,EAAQ,KAAK,OAAO,EAAIsB,CAAK,GAC7CE,EAAAH,EAAQ,QAAR,MAAAG,EAAe,SACnB,KAAA,OAAO,EAAI,KAAK,IAAIlC,EAAQU,EAAQ,KAAK,OAAO,EAAIsB,CAAK,EAElE,CAGA,KAAK,QAAQ,SAAS,QAAQ,QAAShB,GAAgB,CACrD,GAAIA,EAAO,QAAUA,EAAO,QAAQ,aAAa,GAE3CA,EAAO,GAAKf,EAAS,GAAI,CACrB,MAAAc,EAAUC,EAAO,QAAQ,SAAS,EACxC,QAAQ,IAAI,kBAAkBD,EAAU,QAAU,OAAO,mCAAmC,EAEvF,KAAA,QAAQ,YAAYC,CAAM,EAC/BA,EAAO,UAAU,EAAK,EACtBA,EAAO,WAAW,EAAK,CAEzB,CACF,CACD,EAGD,KAAK,SAAS,SAAS,QAAQ,QAASM,GAAiB,CACnDA,EAAQ,QAAUA,EAAQ,QAAQ,aAAa,GAE7CA,EAAQ,GAAKrB,EAAS,KACnB,KAAA,SAAS,YAAYqB,CAAO,EACjCA,EAAQ,UAAU,EAAK,EACvBA,EAAQ,WAAW,EAAK,EAG5B,CACD,EAGG,CAAC,KAAK,aAAe,CAAC,KAAK,UAAY,KAAK,KAAK,IAAM,KACzD,KAAK,UAAU,CAEnB,CAEA,UAAiB,CACX,KAAK,YACP,KAAK,WAAW,UAEd,KAAK,cACP,KAAK,aAAa,UAEhB,KAAK,WACP,KAAK,UAAU,UAEb,KAAK,cACP,KAAK,aAAa,SAEtB,CACF,CC1gBA,MAAMa,EAAgC,CACpC,KAAM,OAAO,KACb,MAAO,IACP,OAAQ,IACR,OAAQ,iBACR,gBAAiB,UACjB,MAAO,CACL,KAAM,OAAO,MAAM,IACnB,WAAY,OAAO,MAAM,YACzB,IAAK,CACH,MAAO,IACP,OAAQ,GACV,EACA,IAAK,CACH,MAAO,KACP,OAAQ,GACV,CACF,EACA,QAAS,CACP,QAAS,SACT,OAAQ,CACN,QAAS,CAAE,EAAG,EAAG,EAAG,GAAI,EACxB,MAAO,EACT,CACF,EACA,MAAO,CAACrC,EAAWQ,CAAS,CAC9B,EAGA,IAAI8B,EAAoB,KAEjB,SAASC,GAAuB,CACrC,OAAID,GACFA,EAAK,QAAQ,EAAI,EAGZA,EAAA,IAAIE,OAAKH,CAAM,EAOfC,CACT,CAEO,SAASG,GAAuB,CAC9B,OAAAH,CACT,CAEO,SAASI,GAAoB,CAC9BJ,IACFA,EAAK,QAAQ,EAAI,EACVA,EAAA,KAEX,CAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAC5B,SAAS,eAAe,gBAAgB,GAE7CC,GAEnB,CAAC,EChEG,IAAII,EAAa,GAEjB,OAAO,aAAe,UAAW,CAC/B,QAAQ,IAAI,yBAAyB,EACrCD,EAAa,EACbH,EAAgB,CACjB,EAED,OAAO,YAAc,UAAW,CAC9B,MAAMD,EAAOG,EAAS,EACjBH,IAELK,EAAa,CAACA,EAEVA,GACFL,EAAK,MAAM,MAAM,WAAW,EAC5B,SAAS,cAAc,mBAAmB,EAAE,YAAc,YAC1D,QAAQ,IAAI,gBAAgB,IAE5BA,EAAK,MAAM,OAAO,WAAW,EAC7B,SAAS,cAAc,mBAAmB,EAAE,YAAc,WAC1D,QAAQ,IAAI,iBAAiB,GAEhC,EAED,OAAO,iBAAmB,UAAW,CACnC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAaD,CACN,EAGD,IAAIM,EAAe,KACfC,EAAmB,GACnBC,EAAoB,GAExB,SAASC,GAAsB,CAE7B,GADAH,EAAeH,EAAS,EACpB,CAACG,EAAc,OAEnB,MAAMI,EAAYJ,EAAa,MAAM,SAAS,WAAW,EACzD,GAAKI,EAGL,IAAIH,GAAoBG,EAAU,OAAQ,CACxC,KAAM,CAAE,MAAA9C,CAAK,EAAK8C,EAAU,QAAQ,KAC9BpC,EAAS,KAAK,IAAI,GAAIV,EAAQ,GAAI,EAClCgC,EAAQ,KAAK,IAAI,EAAGhC,EAAQ,IAAK,EACvC8C,EAAU,OAAO,EAAI,KAAK,IAAIpC,EAAQoC,EAAU,OAAO,EAAId,CAAK,CACjE,CACD,GAAIY,GAAqBE,EAAU,OAAQ,CACzC,KAAM,CAAE,MAAA9C,CAAK,EAAK8C,EAAU,QAAQ,KAC9BpC,EAAS,KAAK,IAAI,GAAIV,EAAQ,GAAI,EAClCgC,EAAQ,KAAK,IAAI,EAAGhC,EAAQ,IAAK,EACvC8C,EAAU,OAAO,EAAI,KAAK,IAAI9C,EAAQU,EAAQoC,EAAU,OAAO,EAAId,CAAK,CACzE,EACF,CAGD,SAAS,iBAAiB,mBAAoB,UAAW,CACvD,QAAQ,IAAI,yCAAyC,EACrDK,EAAgB,EAGhB,MAAMU,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAa,SAAS,eAAe,aAAa,EAEpDD,GAAaC,IAEfD,EAAU,iBAAiB,aAAe,GAAM,CAC9C,EAAE,eAAgB,EAClBJ,EAAmB,EAC7B,CAAS,EACDI,EAAU,iBAAiB,WAAa,GAAM,CAC5C,EAAE,eAAgB,EAClBJ,EAAmB,EAC7B,CAAS,EACDI,EAAU,iBAAiB,YAAc,GAAM,CAC7C,EAAE,eAAgB,EAClBJ,EAAmB,EAC7B,CAAS,EACDI,EAAU,iBAAiB,UAAY,GAAM,CAC3C,EAAE,eAAgB,EAClBJ,EAAmB,EAC7B,CAAS,EAGDK,EAAW,iBAAiB,aAAe,GAAM,CAC/C,EAAE,eAAgB,EAClBJ,EAAoB,EAC9B,CAAS,EACDI,EAAW,iBAAiB,WAAa,GAAM,CAC7C,EAAE,eAAgB,EAClBJ,EAAoB,EAC9B,CAAS,EACDI,EAAW,iBAAiB,YAAc,GAAM,CAC9C,EAAE,eAAgB,EAClBJ,EAAoB,EAC9B,CAAS,EACDI,EAAW,iBAAiB,UAAY,GAAM,CAC5C,EAAE,eAAgB,EAClBJ,EAAoB,EAC9B,CAAS,EAGD,YAAYC,EAAqB,EAAE,EAEtC,CAAA"}