{"version":3,"mappings":"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","names":["BootScene","Scene","width","height","loadingText","progressBg","progressBar","value","GameScene","__publicField","_a","pointer","margin","text","minX","maxX","x","isGreen","bottle","minDelay","maxDelay","random","exponentialFactor","randomDelay","powerup","velocityY","velocityX","_bucket","stack","hearts","gameOverText","finalScoreText","restartText","cursors","speed","_b","_c","config","game","initializeGame","Game","getGame","destroyGame","supabaseUrl","supabaseAnonKey","supabase","createClient","profileService","userId","data","error","profile","updates","nickname","excludeUserId","query","AuthManager","sessionPromise","timeoutPromise","_","reject","session","event","listener","index","email","token","authManager","requireAuth","resolve","unsubscribe","state","__vitePreload","AuthModal","modal","success","canPlay","gamePaused","gameInstance","touchLeftPressed","touchRightPressed","handleTouchControls","gameScene","touchLeft","touchRight"],"sources":["../../src/scenes/BootScene.ts","../../src/scenes/GameScene.ts","../../src/main.ts","../../src/systems/SupabaseClient.ts","../../src/systems/AuthManager.ts","../../index.html?html-proxy&index=1.js"],"sourcesContent":["import { Scene } from 'phaser'\n\nexport class BootScene extends Scene {\n  constructor() {\n    super({ key: 'BootScene' })\n  }\n\n  preload(): void {\n    console.log('🔧 BootScene: Starting asset loading...')\n\n    // Create simple loading graphics\n    this.createLoadingUI()\n\n    // Load basic game assets - using simple rectangles for now\n    this.load.image('bottle', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"20\" height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"40\" fill=\"#8B4513\" stroke=\"#654321\" stroke-width=\"2\"/>\n        <rect x=\"5\" y=\"5\" width=\"10\" height=\"30\" fill=\"#A0522D\"/>\n      </svg>\n    `))\n\n    this.load.image('bottle_green', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"20\" height=\"40\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"20\" height=\"40\" fill=\"#228B22\" stroke=\"#006400\" stroke-width=\"2\"/>\n        <rect x=\"5\" y=\"5\" width=\"10\" height=\"30\" fill=\"#32CD32\"/>\n        <text x=\"10\" y=\"25\" text-anchor=\"middle\" fill=\"white\" font-size=\"10\">X</text>\n      </svg>\n    `))\n\n    this.load.image('powerup_star', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n        <polygon points=\"15,2 18,10 27,10 20,16 23,25 15,20 7,25 10,16 3,10 12,10\"\n                 fill=\"#FFD700\" stroke=\"#FFA500\" stroke-width=\"2\"/>\n        <circle cx=\"15\" cy=\"15\" r=\"3\" fill=\"#FFFF00\"/>\n      </svg>\n    `))\n\n    this.load.image('bucket', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"80\" height=\"60\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M10,20 L70,20 L65,55 L15,55 Z\" fill=\"#888888\" stroke=\"#666666\" stroke-width=\"2\"/>\n        <rect x=\"10\" y=\"15\" width=\"60\" height=\"10\" fill=\"#AAAAAA\"/>\n      </svg>\n    `))\n\n    this.load.image('background', 'data:image/svg+xml;base64,' + btoa(`\n      <svg width=\"800\" height=\"600\" xmlns=\"http://www.w3.org/2000/svg\">\n        <defs>\n          <linearGradient id=\"skyGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" style=\"stop-color:#87CEEB;stop-opacity:1\" />\n            <stop offset=\"100%\" style=\"stop-color:#E0F6FF;stop-opacity:1\" />\n          </linearGradient>\n        </defs>\n        <rect width=\"800\" height=\"600\" fill=\"url(#skyGradient)\"/>\n      </svg>\n    `))\n  }\n\n  create(): void {\n    console.log('✅ BootScene: Assets loaded, transitioning to GameScene')\n\n    // Smooth transition to game\n    this.cameras.main.fadeOut(300, 0, 0, 0)\n    this.cameras.main.once('camerafadeoutcomplete', () => {\n      this.scene.start('GameScene')\n    })\n  }\n\n  private createLoadingUI(): void {\n    const { width, height } = this.cameras.main\n\n    // Loading text\n    const loadingText = this.add.text(width / 2, height / 2 - 50, 'Loading...', {\n      fontSize: '32px',\n      color: '#ffffff',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    // Loading bar background\n    const progressBg = this.add.graphics()\n    progressBg.fillStyle(0x000000, 0.3)\n    progressBg.fillRect(width / 2 - 150, height / 2, 300, 20)\n\n    // Loading bar\n    const progressBar = this.add.graphics()\n\n    // Update loading bar\n    this.load.on('progress', (value: number) => {\n      progressBar.clear()\n      progressBar.fillStyle(0x00ff00)\n      progressBar.fillRect(width / 2 - 150, height / 2, 300 * value, 20)\n    })\n\n    this.load.on('complete', () => {\n      loadingText.setText('Ready!')\n      progressBar.clear()\n      progressBg.clear()\n    })\n  }\n}","import { Scene } from 'phaser'\n\nexport class GameScene extends Scene {\n  private bucket!: Phaser.Physics.Arcade.Image\n  private bottles!: Phaser.Physics.Arcade.Group\n  private powerups!: Phaser.Physics.Arcade.Group\n  private score: number = 0\n  private lives: number = 3\n  private timeLeft: number = 60 // 60 seconds game\n  private scoreText!: Phaser.GameObjects.Text\n  private livesText!: Phaser.GameObjects.Text\n  private timerText!: Phaser.GameObjects.Text\n  private powerupText!: Phaser.GameObjects.Text\n  private spawnTimer!: Phaser.Time.TimerEvent\n  private powerupTimer!: Phaser.Time.TimerEvent\n  private gameTimer!: Phaser.Time.TimerEvent\n  private allGoodTimer!: Phaser.Time.TimerEvent\n  private gameStarted: boolean = false\n  private gameOver: boolean = false\n  private allGoodMode: boolean = false\n  private allGoodTimeLeft: number = 0\n  private gameOverTexts: Phaser.GameObjects.Text[] = []\n\n  constructor() {\n    super({ key: 'GameScene' })\n  }\n\n  create(): void {\n    console.log('🎮 GameScene: Initializing game...')\n\n    // Set background\n    const { width, height } = this.cameras.main\n    this.add.image(width / 2, height / 2, 'background')\n\n    this.setupUI()\n    this.setupGameObjects()\n    this.setupInput()\n    this.setupCollisions()\n\n    // Fade in\n    this.cameras.main.fadeIn(300, 0, 0, 0)\n\n    console.log('✅ GameScene: Ready to play!')\n  }\n\n  private setupUI(): void {\n    const { width, height } = this.cameras.main\n\n    // Score display\n    this.scoreText = this.add.text(16, 16, 'Score: 0', {\n      fontSize: '24px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    })\n\n    // Lives display\n    this.livesText = this.add.text(16, 50, 'Lives: ❤️❤️❤️', {\n      fontSize: '20px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    })\n\n    // Timer display\n    this.timerText = this.add.text(width / 2, 16, 'Time: 60s', {\n      fontSize: '24px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    // Power-up indicator\n    this.powerupText = this.add.text(width - 150, 16, '', {\n      fontSize: '18px',\n      color: '#FFD700',\n      fontFamily: 'Arial'\n    })\n\n    // Instructions\n    this.add.text(width / 2, height * 0.12, 'Use arrow keys or drag to move the bucket!', {\n      fontSize: Math.min(18, width * 0.025) + 'px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    this.add.text(width / 2, height * 0.16, '🍶 Catch brown bottles: +1pt | 🟢 Avoid green bottles: -1 life | ⭐ Star: All Good!', {\n      fontSize: Math.min(14, width * 0.018) + 'px',\n      color: '#333333',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n  }\n\n  private setupGameObjects(): void {\n    const { width, height } = this.cameras.main\n\n    // Create bucket\n    this.bucket = this.physics.add.image(width / 2, height - 80, 'bucket')\n    this.bucket.setCollideWorldBounds(true)\n    this.bucket.setImmovable(true)\n\n    // Create bottles group\n    this.bottles = this.physics.add.group({\n      defaultKey: 'bottle',\n      maxSize: 15\n    })\n\n    // Create powerups group\n    this.powerups = this.physics.add.group({\n      defaultKey: 'powerup_star',\n      maxSize: 3\n    })\n  }\n\n  private setupInput(): void {\n    // Keyboard controls\n    const cursors = this.input.keyboard?.createCursorKeys()\n    if (cursors) {\n      // Handle keyboard input in update loop\n    }\n\n    // Mouse/Touch controls\n    this.input.on('pointermove', (pointer: Phaser.Input.Pointer) => {\n      if (pointer.isDown) {\n        const { width } = this.cameras.main\n        const margin = Math.max(40, width * 0.05) // 5% margin or minimum 40px\n        this.bucket.x = Phaser.Math.Clamp(pointer.x, margin, width - margin)\n      }\n    })\n\n    this.input.on('pointerdown', () => {\n      // Only allow game start if not in game over state\n      if (!this.gameOver) {\n        this.startGame()\n      }\n    })\n  }\n\n  private setupCollisions(): void {\n    this.physics.add.overlap(\n      this.bucket,\n      this.bottles,\n      this.catchBottle,\n      undefined,\n      this\n    )\n\n    this.physics.add.overlap(\n      this.bucket,\n      this.powerups,\n      this.catchPowerup,\n      undefined,\n      this\n    )\n  }\n\n  private startGame(): void {\n    if (this.gameStarted) return\n\n    // Clear any previous game over texts\n    this.gameOverTexts.forEach(text => text.destroy())\n    this.gameOverTexts = []\n\n    // Reset game state for fresh start\n    this.lives = 3\n    this.score = 0\n    this.timeLeft = 60\n    this.gameOver = false\n    this.allGoodMode = false\n    this.allGoodTimeLeft = 0\n\n    // Update UI\n    this.updateLivesDisplay()\n    this.scoreText.setText(`Score: ${this.score}`)\n    this.timerText.setText(`Time: ${this.timeLeft}s`)\n    this.powerupText.setText('')\n\n    this.gameStarted = true\n    console.log('🚀 GAME START DEBUG (RESET):')\n    console.log(`💗 Starting Lives: ${this.lives}`)\n    console.log(`🎯 Starting Score: ${this.score}`)\n    console.log(`⏰ Starting Time: ${this.timeLeft}s`)\n    console.log(`⭐ All Good Mode: ${this.allGoodMode}`)\n\n    // Start spawning bottles\n    this.spawnTimer = this.time.addEvent({\n      delay: 1000,\n      callback: this.spawnBottle,\n      callbackScope: this,\n      loop: true\n    })\n\n    // Start spawning powerups (random intervals)\n    this.scheduleNextPowerup()\n\n    // Start game timer\n    this.gameTimer = this.time.addEvent({\n      delay: 1000,\n      callback: this.updateTimer,\n      callbackScope: this,\n      loop: true\n    })\n  }\n\n  private spawnBottle(): void {\n    if (this.gameOver) return\n\n    const { width } = this.cameras.main\n    // Ensure bottles spawn well within screen bounds\n    const minX = 60\n    const maxX = width - 60\n    const x = Phaser.Math.Between(minX, maxX)\n\n    // 20% chance for green bottle (poison)\n    const isGreen = Math.random() < 0.2\n\n    const bottle = this.bottles.get(x, -50, 'bottle')\n    if (bottle) {\n      bottle.setActive(true)\n      bottle.setVisible(true)\n\n      // Change texture based on bottle type\n      if (isGreen) {\n        bottle.setTexture('bottle_green')\n        console.log(`🟢 GREEN bottle spawned at x:${x}`)\n      } else {\n        bottle.setTexture('bottle')\n        console.log(`🍶 BROWN bottle spawned at x:${x}`)\n      }\n\n      bottle.body.velocity.y = 200\n      bottle.body.velocity.x = Phaser.Math.Between(-50, 50)\n\n      // Set collision bounds to detect when bottle hits ground\n      bottle.body.setCollideWorldBounds(true)\n      bottle.body.setBounce(0)\n\n      // Check for ground collision in update loop\n      bottle.setData('checkGround', true)\n      bottle.setData('isGreen', isGreen)\n    }\n  }\n\n  private scheduleNextPowerup(): void {\n    if (this.gameOver) return\n\n    // More random delay between 5-30 seconds with weighted distribution\n    const minDelay = 5000\n    const maxDelay = 30000\n\n    // Use exponential distribution for more variety (favor shorter intervals but allow long ones)\n    const random = Math.random()\n    const exponentialFactor = Math.pow(random, 1.5) // Creates weighted distribution\n    const randomDelay = minDelay + (maxDelay - minDelay) * exponentialFactor\n\n    console.log(`⭐ Next power-up scheduled in ${(randomDelay / 1000).toFixed(1)}s`)\n\n    this.powerupTimer = this.time.addEvent({\n      delay: randomDelay,\n      callback: () => {\n        this.spawnPowerup()\n        this.scheduleNextPowerup() // Schedule the next one\n      },\n      callbackScope: this\n    })\n  }\n\n  private spawnPowerup(): void {\n    if (this.gameOver) return\n\n    const { width } = this.cameras.main\n    // Ensure powerups spawn well within screen bounds\n    const minX = 80\n    const maxX = width - 80\n    const x = Phaser.Math.Between(minX, maxX)\n\n    const powerup = this.powerups.get(x, -30, 'powerup_star')\n    if (powerup) {\n      powerup.setActive(true)\n      powerup.setVisible(true)\n\n      // Random velocity for more dynamic movement\n      const velocityY = Phaser.Math.Between(120, 180)\n      const velocityX = Phaser.Math.Between(-30, 30)\n\n      powerup.body.velocity.y = velocityY\n      powerup.body.velocity.x = velocityX\n\n      // Set collision bounds\n      powerup.body.setCollideWorldBounds(true)\n      powerup.body.setBounce(0)\n\n      // Check for ground collision in update loop\n      powerup.setData('checkGround', true)\n\n      console.log(`⭐ Power-up spawned at x:${x} with velocity(${velocityX}, ${velocityY})`)\n    }\n  }\n\n  private catchBottle(_bucket: any, bottle: any): void {\n    // Check if bottle is already inactive to prevent multiple scoring\n    if (!bottle.active) return\n\n    const isGreen = bottle.getData('isGreen')\n    console.log(`🎯 BOTTLE CATCH DEBUG:`)\n    console.log(`🍶 Bottle type: ${isGreen ? 'GREEN (poison)' : 'BROWN (normal)'}`)\n    console.log(`⭐ All Good Mode: ${this.allGoodMode}`)\n    console.log(`💗 Lives before catch: ${this.lives}`)\n\n    // Remove caught bottle immediately\n    this.bottles.killAndHide(bottle)\n    bottle.setActive(false)\n    bottle.setVisible(false)\n\n    if (isGreen && !this.allGoodMode) {\n      // Green bottle without All Good mode = lose life\n      console.log(`🚨 GREEN BOTTLE CAUGHT WITHOUT ALL GOOD - LOSING LIFE!`)\n      this.loseLife()\n    } else {\n      // Normal bottle or All Good mode active = gain points\n      this.score += 1\n      this.scoreText.setText(`Score: ${this.score}`)\n      console.log(`✅ ${isGreen ? 'Green bottle (All Good active)' : 'Brown bottle'} caught! +1 point. Score: ${this.score}`)\n    }\n  }\n\n  private catchPowerup(_bucket: any, powerup: any): void {\n    // Check if powerup is already inactive\n    if (!powerup.active) return\n\n    console.log(`⭐ POWERUP CATCH DEBUG:`)\n    console.log(`💗 Lives before powerup: ${this.lives}`)\n\n    // Remove caught powerup immediately\n    this.powerups.killAndHide(powerup)\n    powerup.setActive(false)\n    powerup.setVisible(false)\n\n    // Activate All Good mode for 10 seconds\n    this.activateAllGoodMode()\n\n    console.log(`✅ Power-up caught! All Good mode activated! Lives unchanged: ${this.lives}`)\n  }\n\n  private loseLife(): void {\n    if (this.gameOver) return\n\n    // Get stack trace to see who called this\n    const stack = new Error().stack\n    console.warn(`🚨 LIFE LOST DEBUG:`)\n    console.warn(`💔 Lives before: ${this.lives}`)\n    console.warn(`🔍 Called from:`, stack?.split('\\n').slice(1, 4))\n    console.warn(`⭐ All Good Mode: ${this.allGoodMode}`)\n\n    this.lives -= 1\n    this.updateLivesDisplay()\n\n    console.warn(`💔 Lives after: ${this.lives}`)\n\n    if (this.lives <= 0) {\n      console.warn(`☠️ GAME OVER - No lives remaining`)\n      this.endGame()\n    }\n  }\n\n  private updateLivesDisplay(): void {\n    const hearts = '❤️'.repeat(this.lives)\n    this.livesText.setText(`Lives: ${hearts}`)\n  }\n\n  private updateTimer(): void {\n    if (this.gameOver) return\n\n    this.timeLeft -= 1\n    this.timerText.setText(`Time: ${this.timeLeft}s`)\n\n    if (this.timeLeft <= 0) {\n      this.endGame()\n    }\n  }\n\n  private activateAllGoodMode(): void {\n    this.allGoodMode = true\n    this.allGoodTimeLeft = 10\n\n    // Update UI\n    this.powerupText.setText(`⭐ ALL GOOD: ${this.allGoodTimeLeft}s`)\n\n    // Start countdown timer\n    if (this.allGoodTimer) {\n      this.allGoodTimer.destroy()\n    }\n\n    this.allGoodTimer = this.time.addEvent({\n      delay: 1000,\n      callback: this.updateAllGoodMode,\n      callbackScope: this,\n      loop: true\n    })\n  }\n\n  private updateAllGoodMode(): void {\n    if (!this.allGoodMode) return\n\n    this.allGoodTimeLeft -= 1\n    this.powerupText.setText(`⭐ ALL GOOD: ${this.allGoodTimeLeft}s`)\n\n    if (this.allGoodTimeLeft <= 0) {\n      this.deactivateAllGoodMode()\n    }\n  }\n\n  private deactivateAllGoodMode(): void {\n    this.allGoodMode = false\n    this.allGoodTimeLeft = 0\n    this.powerupText.setText('')\n\n    if (this.allGoodTimer) {\n      this.allGoodTimer.destroy()\n    }\n\n    console.log('⭐ All Good mode deactivated')\n  }\n\n  private endGame(): void {\n    this.gameOver = true\n    this.gameStarted = false\n\n    // Stop all timers\n    if (this.spawnTimer) this.spawnTimer.destroy()\n    if (this.powerupTimer) this.powerupTimer.destroy()\n    if (this.gameTimer) this.gameTimer.destroy()\n    if (this.allGoodTimer) this.allGoodTimer.destroy()\n\n    // Deactivate any active powerups\n    this.deactivateAllGoodMode()\n\n    // Show game over message\n    const { width, height } = this.cameras.main\n\n    const gameOverText = this.add.text(width / 2, height / 2, 'GAME OVER!', {\n      fontSize: Math.min(48, width * 0.06) + 'px',\n      color: '#ff0000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    const finalScoreText = this.add.text(width / 2, height / 2 + 50, `Final Score: ${this.score}`, {\n      fontSize: Math.min(24, width * 0.03) + 'px',\n      color: '#000000',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    const restartText = this.add.text(width / 2, height / 2 + 100, 'Click \"New Game\" to restart', {\n      fontSize: Math.min(18, width * 0.025) + 'px',\n      color: '#666666',\n      fontFamily: 'Arial'\n    }).setOrigin(0.5)\n\n    // Store game over texts for cleanup\n    this.gameOverTexts.push(gameOverText, finalScoreText, restartText)\n\n    console.log(`🎮 Game Over! Final Score: ${this.score}`)\n  }\n\n  update(): void {\n    if (this.gameOver) return\n\n    const { width, height } = this.cameras.main\n\n    // Keyboard controls\n    const cursors = this.input.keyboard?.createCursorKeys()\n    if (cursors) {\n      const margin = Math.max(40, width * 0.05) // 5% margin or minimum 40px\n      const speed = Math.max(5, width * 0.006) // Responsive speed based on screen width\n      if (cursors.left?.isDown) {\n        this.bucket.x = Math.max(margin, this.bucket.x - speed)\n      } else if (cursors.right?.isDown) {\n        this.bucket.x = Math.min(width - margin, this.bucket.x + speed)\n      }\n    }\n\n    // Check bottles that hit the ground\n    this.bottles.children.entries.forEach((bottle: any) => {\n      if (bottle.active && bottle.getData('checkGround')) {\n        // Check if bottle hit the bottom (ground)\n        if (bottle.y >= height - 20) { // Near bottom of screen\n          const isGreen = bottle.getData('isGreen')\n          console.log(`🌍 GROUND HIT: ${isGreen ? 'GREEN' : 'BROWN'} bottle hit ground - NO LIFE LOSS`)\n\n          this.bottles.killAndHide(bottle)\n          bottle.setActive(false)\n          bottle.setVisible(false)\n          // No life loss for bottles hitting ground - only when catching green bottles\n        }\n      }\n    })\n\n    // Check powerups that hit the ground\n    this.powerups.children.entries.forEach((powerup: any) => {\n      if (powerup.active && powerup.getData('checkGround')) {\n        // Check if powerup hit the bottom (ground)\n        if (powerup.y >= height - 20) { // Near bottom of screen\n          this.powerups.killAndHide(powerup)\n          powerup.setActive(false)\n          powerup.setVisible(false)\n          // No penalty for missing powerups\n        }\n      }\n    })\n\n    // Auto-start game after a few seconds if not started\n    if (!this.gameStarted && !this.gameOver && this.time.now > 3000) {\n      this.startGame()\n    }\n  }\n\n  shutdown(): void {\n    if (this.spawnTimer) {\n      this.spawnTimer.destroy()\n    }\n    if (this.powerupTimer) {\n      this.powerupTimer.destroy()\n    }\n    if (this.gameTimer) {\n      this.gameTimer.destroy()\n    }\n    if (this.allGoodTimer) {\n      this.allGoodTimer.destroy()\n    }\n  }\n}","import { Game, Types } from 'phaser'\nimport { BootScene } from '@/scenes/BootScene'\nimport { GameScene } from '@/scenes/GameScene'\n\n// Game configuration\nconst config: Types.Core.GameConfig = {\n  type: Phaser.AUTO,\n  width: 800,\n  height: 600,\n  parent: 'game-container',\n  backgroundColor: '#87CEEB',\n  scale: {\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n    min: {\n      width: 300,\n      height: 400\n    },\n    max: {\n      width: 1200,\n      height: 900\n    }\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { x: 0, y: 300 },\n      debug: false\n    }\n  },\n  scene: [BootScene, GameScene]\n}\n\n// Initialize game\nlet game: Game | null = null\n\nexport function initializeGame(): Game {\n  if (game) {\n    game.destroy(true)\n  }\n\n  game = new Game(config)\n\n  // Development helper - only expose in dev mode\n  if (import.meta.env?.MODE === 'development') {\n    (window as any).game = game\n  }\n\n  return game\n}\n\nexport function getGame(): Game | null {\n  return game\n}\n\nexport function destroyGame(): void {\n  if (game) {\n    game.destroy(true)\n    game = null\n  }\n}\n\n// DO NOT auto-initialize - wait for user to click GIOCA\n// This prevents double initialization issues\n// Game will be initialized via startNewGame() function in index.html","import { createClient } from '@supabase/supabase-js'\n\n// Environment variables\nconst supabaseUrl = import.meta.env.VITE_SUPABASE_URL\nconst supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY\n\nconsole.log('🔍 Environment check:', {\n  url: supabaseUrl ? 'SET' : 'MISSING',\n  key: supabaseAnonKey ? 'SET' : 'MISSING',\n  env: import.meta.env\n})\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error('❌ Missing env vars:', { supabaseUrl, supabaseAnonKey })\n  throw new Error(`Missing Supabase environment variables: URL=${!!supabaseUrl}, KEY=${!!supabaseAnonKey}`)\n}\n\n// Database types\nexport interface Profile {\n  id: string\n  email: string\n  nickname: string | null\n  consent_marketing: boolean\n  consent_timestamp: string | null\n  created_at: string\n}\n\nexport interface Score {\n  id: number\n  user_id: string\n  score: number\n  run_seconds: number\n  created_at: string\n}\n\nexport interface Database {\n  public: {\n    Tables: {\n      profiles: {\n        Row: Profile\n        Insert: Omit<Profile, 'id' | 'created_at'>\n        Update: Partial<Omit<Profile, 'id' | 'created_at'>>\n      }\n      scores: {\n        Row: Score\n        Insert: Omit<Score, 'id' | 'created_at'>\n        Update: Partial<Omit<Score, 'id' | 'created_at'>>\n      }\n    }\n  }\n}\n\n// Create Supabase client\nexport const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n})\n\n// Check if user is admin\nexport const isAdmin = (userId: string): boolean => {\n  const adminUuids = import.meta.env.VITE_ADMIN_UUIDS?.split(',') || []\n  return adminUuids.includes(userId)\n}\n\n// Profile service\nexport const profileService = {\n  async getProfile(userId: string): Promise<Profile | null> {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', userId)\n        .maybeSingle()\n\n      if (error) {\n        console.error('Error fetching profile:', error)\n        return null\n      }\n\n      return data as Profile | null\n    } catch (error) {\n      console.error('Profile fetch exception:', error)\n      return null\n    }\n  },\n\n  async createProfile(profile: Database['public']['Tables']['profiles']['Insert']): Promise<Profile | null> {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .upsert(profile as any, {\n          onConflict: 'id',\n          ignoreDuplicates: false\n        })\n        .select()\n        .single()\n\n      if (error) {\n        console.error('Error creating profile:', error)\n        return null\n      }\n\n      return data as Profile\n    } catch (error) {\n      console.error('Profile creation exception:', error)\n      return null\n    }\n  },\n\n  async updateProfile(userId: string, updates: Partial<Omit<Profile, 'id' | 'created_at'>>): Promise<Profile | null> {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        // @ts-ignore - Temporary fix for type inference issue\n        .update(updates)\n        .eq('id', userId)\n        .select()\n        .single()\n\n      if (error) {\n        console.error('Error updating profile:', error)\n        return null\n      }\n\n      return data\n    } catch (error) {\n      console.error('Profile update exception:', error)\n      return null\n    }\n  },\n\n  async checkNicknameAvailability(nickname: string, excludeUserId?: string): Promise<boolean> {\n    try {\n      if (!nickname || nickname.trim().length === 0) {\n        return true // Empty nicknames are allowed\n      }\n\n      const query = supabase\n        .from('profiles')\n        .select('id')\n        .eq('nickname' as any, nickname.trim())\n\n      if (excludeUserId) {\n        query.neq('id', excludeUserId)\n      }\n\n      const { data, error } = await query\n\n      if (error) {\n        console.error('Error checking nickname availability:', error)\n        return false\n      }\n\n      return data.length === 0\n    } catch (error) {\n      console.error('Nickname availability check exception:', error)\n      return false\n    }\n  }\n}\n\n// Score service\nexport const scoreService = {\n  async submitScore(userId: string, score: number, runSeconds: number): Promise<Score | null> {\n    try {\n      // Get current session for authorization\n      const { data: { session }, error: sessionError } = await supabase.auth.getSession()\n\n      if (sessionError || !session) {\n        console.error('No valid session for score submission')\n        return null\n      }\n\n      // Try Edge Function first (server-side validation)\n      try {\n        const { data, error } = await supabase.functions.invoke('submit-score', {\n          body: {\n            score,\n            runSeconds,\n            gameEndTimestamp: Date.now()\n          },\n          headers: {\n            Authorization: `Bearer ${session.access_token}`\n          }\n        })\n\n        if (error) throw error\n\n        if (data.success) {\n          console.log('Score submitted via Edge Function:', data.storedScore)\n          return {\n            id: data.storedScore.id,\n            user_id: userId,\n            score: data.storedScore.score,\n            run_seconds: data.storedScore.runSeconds,\n            created_at: new Date().toISOString()\n          }\n        }\n      } catch (edgeError) {\n        console.warn('Edge Function failed, using fallback:', edgeError)\n      }\n\n      // Fallback to direct database submission with client-side validation\n      if (score < 0 || score > 600) {\n        console.error('Invalid score range:', score)\n        return null\n      }\n\n      if (runSeconds < 5) {\n        console.error('Game too short, likely invalid:', runSeconds)\n        return null\n      }\n\n      const { data, error } = await supabase\n        .from('scores')\n        .insert({\n          user_id: userId,\n          score,\n          run_seconds: runSeconds\n        } as any)\n        .select()\n        .single()\n\n      if (error) {\n        console.error('Database error submitting score:', error)\n        return null\n      }\n\n      console.log('Score submitted via direct database:', data)\n      return data as Score\n\n    } catch (error) {\n      console.error('Score submission error:', error)\n      return null\n    }\n  },\n\n  async getWeeklyLeaderboard(limit: number = 50): Promise<Array<Score & { nickname: string }>> {\n    try {\n      // Calculate start of current week (Monday 00:00)\n      const now = new Date()\n      const dayOfWeek = now.getDay() || 7 // Make Sunday = 7\n      const startOfWeek = new Date(now)\n      startOfWeek.setDate(now.getDate() - dayOfWeek + 1)\n      startOfWeek.setHours(0, 0, 0, 0)\n\n      const { data, error } = await supabase\n        .from('scores')\n        .select(`\n          *,\n          profiles (nickname)\n        `)\n        .gte('created_at', startOfWeek.toISOString())\n        .order('score', { ascending: false })\n        .order('created_at', { ascending: true })\n        .limit(limit)\n\n      if (error) {\n        console.error('Error fetching weekly leaderboard:', error)\n        return []\n      }\n\n      return (data as any[]).map(item => ({\n        ...item,\n        nickname: item.profiles?.nickname || 'Anonymous'\n      }))\n    } catch (error) {\n      console.error('Weekly leaderboard exception:', error)\n      return []\n    }\n  },\n\n  async getMonthlyLeaderboard(limit: number = 50): Promise<Array<Score & { nickname: string }>> {\n    try {\n      // Calculate start of current month\n      const now = new Date()\n      const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1)\n\n      const { data, error } = await supabase\n        .from('scores')\n        .select(`\n          *,\n          profiles (nickname)\n        `)\n        .gte('created_at', startOfMonth.toISOString())\n        .order('score', { ascending: false })\n        .order('created_at', { ascending: true })\n        .limit(limit)\n\n      if (error) {\n        console.error('Error fetching monthly leaderboard:', error)\n        return []\n      }\n\n      return (data as any[]).map(item => ({\n        ...item,\n        nickname: item.profiles?.nickname || 'Anonymous'\n      }))\n    } catch (error) {\n      console.error('Monthly leaderboard exception:', error)\n      return []\n    }\n  }\n}","import { supabase, profileService, type Profile } from './SupabaseClient'\nimport type { User, Session } from '@supabase/supabase-js'\n\nexport interface AuthState {\n  user: User | null\n  profile: Profile | null\n  session: Session | null\n  isLoading: boolean\n  isAuthenticated: boolean\n  hasMarketingConsent: boolean\n}\n\nexport class AuthManager {\n  private state: AuthState = {\n    user: null,\n    profile: null,\n    session: null,\n    isLoading: true,\n    isAuthenticated: false,\n    hasMarketingConsent: false\n  }\n\n  private listeners: Array<(state: AuthState) => void> = []\n  private isProcessingAuth = false\n\n  constructor() {\n    this.initializeAuth()\n    this.setupAuthListeners()\n  }\n\n  private async initializeAuth(): Promise<void> {\n    try {\n      console.log('🔄 Initializing auth...')\n\n      // Get current session with timeout\n      const sessionPromise = supabase.auth.getSession()\n      const timeoutPromise = new Promise<never>((_, reject) =>\n        setTimeout(() => reject(new Error('Session timeout')), 5000)\n      )\n\n      const { data: { session }, error } = await Promise.race([sessionPromise, timeoutPromise])\n\n      if (error) {\n        console.error('Error getting session:', error)\n      }\n\n      if (session) {\n        console.log('✅ Session found, processing auth...')\n        await this.handleAuthChange(session)\n      } else {\n        console.log('ℹ️ No active session')\n      }\n\n    } catch (error) {\n      console.error('Auth initialization error:', error)\n    } finally {\n      this.state.isLoading = false\n      this.notifyListeners()\n      console.log('✅ Auth initialization complete')\n    }\n  }\n\n  private setupAuthListeners(): void {\n    supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log('🔄 Auth state change:', event)\n\n      switch (event) {\n        case 'SIGNED_IN':\n          if (session) {\n            await this.handleAuthChange(session)\n          }\n          break\n\n        case 'SIGNED_OUT':\n          this.resetAuthState()\n          break\n\n        case 'TOKEN_REFRESHED':\n          if (session) {\n            this.state.session = session\n            this.state.user = session.user\n          }\n          break\n      }\n\n      this.notifyListeners()\n    })\n  }\n\n  private async handleAuthChange(session: Session): Promise<void> {\n    if (this.isProcessingAuth) {\n      console.log('⏳ Already processing auth, skipping...')\n      return\n    }\n\n    this.isProcessingAuth = true\n\n    try {\n      console.log('👤 Processing auth for user:', session.user.email)\n\n      this.state.session = session\n      this.state.user = session.user\n      this.state.isAuthenticated = true\n\n      // Load or create profile\n      let profile = await profileService.getProfile(session.user.id)\n\n      if (!profile) {\n        console.log('📝 Creating new profile...')\n        profile = await profileService.createProfile({\n          email: session.user.email || '',\n          nickname: session.user.user_metadata?.name ||\n                   session.user.user_metadata?.full_name || null,\n          consent_marketing: false,\n          consent_timestamp: null\n        })\n      }\n\n      this.state.profile = profile\n      this.state.hasMarketingConsent = profile?.consent_marketing || false\n\n      console.log('✅ Auth processing complete:', {\n        email: session.user.email,\n        hasProfile: !!profile,\n        hasConsent: this.state.hasMarketingConsent\n      })\n\n    } catch (error) {\n      console.error('❌ Error processing auth:', error)\n    } finally {\n      this.state.isLoading = false\n      this.isProcessingAuth = false\n    }\n  }\n\n  private resetAuthState(): void {\n    this.state = {\n      user: null,\n      profile: null,\n      session: null,\n      isLoading: false,\n      isAuthenticated: false,\n      hasMarketingConsent: false\n    }\n  }\n\n  private notifyListeners(): void {\n    this.listeners.forEach(listener => {\n      try {\n        listener(this.state)\n      } catch (error) {\n        console.error('Error in auth listener:', error)\n      }\n    })\n  }\n\n  // Public API\n  public subscribe(listener: (state: AuthState) => void): () => void {\n    this.listeners.push(listener)\n    listener(this.state) // Immediate call with current state\n\n    return () => {\n      const index = this.listeners.indexOf(listener)\n      if (index > -1) {\n        this.listeners.splice(index, 1)\n      }\n    }\n  }\n\n  public getState(): AuthState {\n    return { ...this.state }\n  }\n\n  public isReady(): boolean {\n    return !this.state.isLoading\n  }\n\n  public canPlayGame(): boolean {\n    return this.state.isAuthenticated\n  }\n\n  public canCompeteForPrizes(): boolean {\n    return this.state.isAuthenticated && this.state.hasMarketingConsent\n  }\n\n  public async signInWithGoogle(): Promise<{ success: boolean, error?: string }> {\n    try {\n      const { error } = await supabase.auth.signInWithOAuth({\n        provider: 'google'\n      })\n\n      if (error) {\n        console.error('Google sign in error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n\n    } catch (error) {\n      console.error('Google sign in exception:', error)\n      return { success: false, error: 'Unexpected error during sign in' }\n    }\n  }\n\n  public async signInWithOTP(email: string): Promise<{ success: boolean, error?: string }> {\n    try {\n      const { error } = await supabase.auth.signInWithOtp({\n        email\n      })\n\n      if (error) {\n        console.error('OTP sign in error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n\n    } catch (error) {\n      console.error('OTP sign in exception:', error)\n      return { success: false, error: 'Unexpected error during sign in' }\n    }\n  }\n\n  public async verifyOTP(email: string, token: string): Promise<{ success: boolean, error?: string }> {\n    try {\n      const { error } = await supabase.auth.verifyOtp({\n        email,\n        token,\n        type: 'email'\n      })\n\n      if (error) {\n        console.error('OTP verification error:', error)\n        return { success: false, error: error.message }\n      }\n\n      return { success: true }\n\n    } catch (error) {\n      console.error('OTP verification exception:', error)\n      return { success: false, error: 'Unexpected error during verification' }\n    }\n  }\n\n  public async signOut(): Promise<void> {\n    try {\n      const { error } = await supabase.auth.signOut()\n      if (error) throw error\n    } catch (error) {\n      console.error('Sign out error:', error)\n      throw error\n    }\n  }\n\n  public async updateProfile(updates: Partial<Profile>): Promise<Profile | null> {\n    if (!this.state.user) {\n      throw new Error('No authenticated user')\n    }\n\n    try {\n      const profile = await profileService.updateProfile(this.state.user.id, updates)\n\n      if (profile) {\n        this.state.profile = profile\n\n        if ('consent_marketing' in updates) {\n          this.state.hasMarketingConsent = profile.consent_marketing\n        }\n\n        this.notifyListeners()\n      }\n\n      return profile\n\n    } catch (error) {\n      console.error('Profile update error:', error)\n      throw error\n    }\n  }\n\n  public async refreshProfile(): Promise<void> {\n    if (!this.state.user) return\n\n    try {\n      const profile = await profileService.getProfile(this.state.user.id)\n      if (profile) {\n        this.state.profile = profile\n        this.state.hasMarketingConsent = profile.consent_marketing\n        this.notifyListeners()\n      }\n    } catch (error) {\n      console.error('Profile refresh error:', error)\n    }\n  }\n\n  public destroy(): void {\n    this.listeners = []\n  }\n}\n\n// Global instance\nexport const authManager = new AuthManager()\n\n// Helper to require authentication before playing\nexport const requireAuth = async (): Promise<boolean> => {\n  console.log('🎮 Checking auth for game access...')\n\n  if (authManager.canPlayGame()) {\n    console.log('✅ User can play!')\n    return true\n  }\n\n  if (!authManager.isReady()) {\n    console.log('⏳ Waiting for auth to initialize...')\n    await new Promise<void>(resolve => {\n      const unsubscribe = authManager.subscribe((state) => {\n        if (!state.isLoading) {\n          unsubscribe()\n          resolve()\n        }\n      })\n    })\n  }\n\n  // If still not authenticated, show auth modal\n  if (!authManager.canPlayGame()) {\n    console.log('🔐 Showing auth modal...')\n    return new Promise<boolean>((resolve) => {\n      // Dynamic import to avoid circular dependency\n      import('../ui/AuthModal').then(({ AuthModal }) => {\n        const modal = new AuthModal()\n        modal.onAuth((success) => {\n          modal.destroy()\n          resolve(success && authManager.canPlayGame())\n        })\n        modal.show()\n      }).catch(error => {\n        console.error('Failed to load AuthModal:', error)\n        resolve(false)\n      })\n    })\n  }\n\n  const canPlay = authManager.canPlayGame()\n  console.log('🎯 Final auth check result:', canPlay)\n  return canPlay\n}","\n    import { initializeGame, getGame, destroyGame } from './src/main.ts'\n    import { requireAuth } from './src/systems/AuthManager.ts'\n\n    // Global game state\n    let gamePaused = false\n\n    // GLOBAL FUNCTIONS FOR BUTTONS\n    window.startNewGame = async function() {\n      console.log('🎮 Starting new game...')\n\n      // Check authentication first\n      const canPlay = await requireAuth()\n      if (!canPlay) {\n        console.log('❌ User not authenticated, game start cancelled')\n        return\n      }\n\n      console.log('✅ User authenticated, starting game...')\n      // Only destroy if game exists to avoid unnecessary recreation\n      const existingGame = getGame()\n      if (existingGame) {\n        console.log('🔄 Destroying existing game instance')\n        destroyGame()\n      }\n      initializeGame()\n    }\n\n    window.togglePause = function() {\n      const game = getGame()\n      if (!game) return\n\n      gamePaused = !gamePaused\n\n      if (gamePaused) {\n        game.scene.pause('GameScene')\n        document.querySelector('.btn:nth-child(2)').textContent = '▶️ Resume'\n        console.log('⏸️ Game paused')\n      } else {\n        game.scene.resume('GameScene')\n        document.querySelector('.btn:nth-child(2)').textContent = '⏸️ Pause'\n        console.log('▶️ Game resumed')\n      }\n    }\n\n    window.showInstructions = function() {\n      alert(`🎮 How to Play:\n\n🎯 Objective: Catch falling bottles with your bucket!\n\n🕹️ Controls:\n• Use ← → arrow keys to move\n• Or click and drag with mouse/touch\n• On mobile: Use touch controls at bottom\n\n🍶 Game Rules:\n• Brown bottles: +1 point each\n• Green bottles: Lose 1 life (unless All Good mode)\n• ⭐ Star power-ups: Activate All Good mode\n• 💗 You have 3 lives\n• ⏰ 60 seconds to play\n\n🏆 Tips:\n• Catch star power-ups to avoid green bottle damage\n• All Good mode makes green bottles worth +1 point\n• Try to get the highest score possible!\n\nGood luck! 🎮`)\n    }\n\n    window.testAuth = function() {\n      console.log('🧪 Testing auth flow...')\n      alert(`🔐 Auth System Demo\n\n📱 AuthModal Features:\n✅ Google OAuth integration\n✅ Email OTP verification\n✅ Multi-step flow (Welcome → Email → Verify → Profile)\n✅ Marketing consent handling\n✅ Nickname setup\n✅ Mobile responsive design\n✅ Glassmorphism UI\n\n🎮 Integration:\n✅ Game requires auth before play\n✅ Profile management\n✅ Score submission ready\n\nThe Auth system is 98% complete and ready for production testing!\n\nClick \"New Game\" to see auth requirement in action.`)\n    }\n\n    // Mobile touch controls\n    let gameInstance = null\n    let touchLeftPressed = false\n    let touchRightPressed = false\n\n    function handleTouchControls() {\n      gameInstance = getGame()\n      if (!gameInstance) return\n\n      const gameScene = gameInstance.scene.getScene('GameScene')\n      if (!gameScene) return\n\n      // Simulate keyboard input\n      if (touchLeftPressed && gameScene.bucket) {\n        const { width } = gameScene.cameras.main\n        const margin = Math.max(40, width * 0.05)\n        const speed = Math.max(5, width * 0.006)\n        gameScene.bucket.x = Math.max(margin, gameScene.bucket.x - speed)\n      }\n      if (touchRightPressed && gameScene.bucket) {\n        const { width } = gameScene.cameras.main\n        const margin = Math.max(40, width * 0.05)\n        const speed = Math.max(5, width * 0.006)\n        gameScene.bucket.x = Math.min(width - margin, gameScene.bucket.x + speed)\n      }\n    }\n\n    // Auto-initialize when page loads\n    document.addEventListener('DOMContentLoaded', function() {\n      console.log('🚀 Etimuè Bottle Dropper v2.0.0 loaded!')\n      // DO NOT initialize game here - wait for user to click GIOCA\n      // initializeGame() - REMOVED to fix double initialization bug\n\n      // Setup mobile touch controls\n      const touchLeft = document.getElementById('touch-left')\n      const touchRight = document.getElementById('touch-right')\n\n      if (touchLeft && touchRight) {\n        // Left button events\n        touchLeft.addEventListener('touchstart', (e) => {\n          e.preventDefault()\n          touchLeftPressed = true\n        })\n        touchLeft.addEventListener('touchend', (e) => {\n          e.preventDefault()\n          touchLeftPressed = false\n        })\n        touchLeft.addEventListener('mousedown', (e) => {\n          e.preventDefault()\n          touchLeftPressed = true\n        })\n        touchLeft.addEventListener('mouseup', (e) => {\n          e.preventDefault()\n          touchLeftPressed = false\n        })\n\n        // Right button events\n        touchRight.addEventListener('touchstart', (e) => {\n          e.preventDefault()\n          touchRightPressed = true\n        })\n        touchRight.addEventListener('touchend', (e) => {\n          e.preventDefault()\n          touchRightPressed = false\n        })\n        touchRight.addEventListener('mousedown', (e) => {\n          e.preventDefault()\n          touchRightPressed = true\n        })\n        touchRight.addEventListener('mouseup', (e) => {\n          e.preventDefault()\n          touchRightPressed = false\n        })\n\n        // Continuous movement loop\n        setInterval(handleTouchControls, 16) // ~60fps\n      }\n    })\n  "],"file":"assets/index-5d31ee83.js"}